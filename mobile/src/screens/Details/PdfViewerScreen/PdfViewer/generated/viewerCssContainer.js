
  const bundle = 'LyogQ29weXJpZ2h0IDIwMTQgTW96aWxsYSBGb3VuZGF0aW9uCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqLwoKLnRleHRMYXllciB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDA7CiAgdG9wOiAwOwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICBvdmVyZmxvdzogaGlkZGVuOwogIG9wYWNpdHk6IDAuMjsKICBsaW5lLWhlaWdodDogMS4wOwp9CgoudGV4dExheWVyID4gc3BhbiB7CiAgY29sb3I6IHRyYW5zcGFyZW50OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB3aGl0ZS1zcGFjZTogcHJlOwogIGN1cnNvcjogdGV4dDsKICB0cmFuc2Zvcm0tb3JpZ2luOiAwJSAwJTsKfQoKLnRleHRMYXllciAuaGlnaGxpZ2h0IHsKICBtYXJnaW46IC0xcHg7CiAgcGFkZGluZzogMXB4OwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTgwLCAwLCAxNzAsIDEpOwogIGJvcmRlci1yYWRpdXM6IDRweDsKfQoKLnRleHRMYXllciAuaGlnaGxpZ2h0LmJlZ2luIHsKICBib3JkZXItcmFkaXVzOiA0cHggMHB4IDBweCA0cHg7Cn0KCi50ZXh0TGF5ZXIgLmhpZ2hsaWdodC5lbmQgewogIGJvcmRlci1yYWRpdXM6IDBweCA0cHggNHB4IDBweDsKfQoKLnRleHRMYXllciAuaGlnaGxpZ2h0Lm1pZGRsZSB7CiAgYm9yZGVyLXJhZGl1czogMHB4Owp9CgoudGV4dExheWVyIC5oaWdobGlnaHQuc2VsZWN0ZWQgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMTAwLCAwLCAxKTsKfQoKLnRleHRMYXllciA6Oi1tb3otc2VsZWN0aW9uIHsKICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDI1NSwgMSk7Cn0KCi50ZXh0TGF5ZXIgOjpzZWxlY3Rpb24gewogIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMjU1LCAxKTsKfQoKLnRleHRMYXllciAuZW5kT2ZDb250ZW50IHsKICBkaXNwbGF5OiBibG9jazsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogMHB4OwogIHRvcDogMTAwJTsKICByaWdodDogMHB4OwogIGJvdHRvbTogMHB4OwogIHotaW5kZXg6IC0xOwogIGN1cnNvcjogZGVmYXVsdDsKICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOwogICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTsKICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lOwp9CgoudGV4dExheWVyIC5lbmRPZkNvbnRlbnQuYWN0aXZlIHsKICB0b3A6IDBweDsKfQoKCi5hbm5vdGF0aW9uTGF5ZXIgc2VjdGlvbiB7CiAgcG9zaXRpb246IGFic29sdXRlOwp9CgouYW5ub3RhdGlvbkxheWVyIC5saW5rQW5ub3RhdGlvbiA+IGEsCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24ucHVzaEJ1dHRvbiA+IGEgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBmb250LXNpemU6IDFlbTsKICB0b3A6IDA7CiAgbGVmdDogMDsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLmxpbmtBbm5vdGF0aW9uID4gYTpob3ZlciwKLmFubm90YXRpb25MYXllciAuYnV0dG9uV2lkZ2V0QW5ub3RhdGlvbi5wdXNoQnV0dG9uID4gYTpob3ZlciB7CiAgb3BhY2l0eTogMC4yOwogIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDAsIDEpOwogIGJveC1zaGFkb3c6IDBweCAycHggMTBweCByZ2JhKDI1NSwgMjU1LCAwLCAxKTsKfQoKLmFubm90YXRpb25MYXllciAudGV4dEFubm90YXRpb24gaW1nIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgouYW5ub3RhdGlvbkxheWVyIC50ZXh0V2lkZ2V0QW5ub3RhdGlvbiBpbnB1dCwKLmFubm90YXRpb25MYXllciAudGV4dFdpZGdldEFubm90YXRpb24gdGV4dGFyZWEsCi5hbm5vdGF0aW9uTGF5ZXIgLmNob2ljZVdpZGdldEFubm90YXRpb24gc2VsZWN0LAouYW5ub3RhdGlvbkxheWVyIC5idXR0b25XaWRnZXRBbm5vdGF0aW9uLmNoZWNrQm94IGlucHV0LAouYW5ub3RhdGlvbkxheWVyIC5idXR0b25XaWRnZXRBbm5vdGF0aW9uLnJhZGlvQnV0dG9uIGlucHV0IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDU0LCAyNTUsIDAuMTMpOwogIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgZm9udC1zaXplOiA5cHg7CiAgaGVpZ2h0OiAxMDAlOwogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwIDNweDsKICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogIHdpZHRoOiAxMDAlOwp9CgouYW5ub3RhdGlvbkxheWVyIC5jaG9pY2VXaWRnZXRBbm5vdGF0aW9uIHNlbGVjdCBvcHRpb24gewogIHBhZGRpbmc6IDA7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24ucmFkaW9CdXR0b24gaW5wdXQgewogIGJvcmRlci1yYWRpdXM6IDUwJTsKfQoKLmFubm90YXRpb25MYXllciAudGV4dFdpZGdldEFubm90YXRpb24gdGV4dGFyZWEgewogIGZvbnQ6IG1lc3NhZ2UtYm94OwogIGZvbnQtc2l6ZTogOXB4OwogIHJlc2l6ZTogbm9uZTsKfQoKLmFubm90YXRpb25MYXllciAudGV4dFdpZGdldEFubm90YXRpb24gaW5wdXRbZGlzYWJsZWRdLAouYW5ub3RhdGlvbkxheWVyIC50ZXh0V2lkZ2V0QW5ub3RhdGlvbiB0ZXh0YXJlYVtkaXNhYmxlZF0sCi5hbm5vdGF0aW9uTGF5ZXIgLmNob2ljZVdpZGdldEFubm90YXRpb24gc2VsZWN0W2Rpc2FibGVkXSwKLmFubm90YXRpb25MYXllciAuYnV0dG9uV2lkZ2V0QW5ub3RhdGlvbi5jaGVja0JveCBpbnB1dFtkaXNhYmxlZF0sCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24ucmFkaW9CdXR0b24gaW5wdXRbZGlzYWJsZWRdIHsKICBiYWNrZ3JvdW5kOiBub25lOwogIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50OwogIGN1cnNvcjogbm90LWFsbG93ZWQ7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLnRleHRXaWRnZXRBbm5vdGF0aW9uIGlucHV0OmhvdmVyLAouYW5ub3RhdGlvbkxheWVyIC50ZXh0V2lkZ2V0QW5ub3RhdGlvbiB0ZXh0YXJlYTpob3ZlciwKLmFubm90YXRpb25MYXllciAuY2hvaWNlV2lkZ2V0QW5ub3RhdGlvbiBzZWxlY3Q6aG92ZXIsCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24uY2hlY2tCb3ggaW5wdXQ6aG92ZXIsCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24ucmFkaW9CdXR0b24gaW5wdXQ6aG92ZXIgewogIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMSk7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLnRleHRXaWRnZXRBbm5vdGF0aW9uIGlucHV0OmZvY3VzLAouYW5ub3RhdGlvbkxheWVyIC50ZXh0V2lkZ2V0QW5ub3RhdGlvbiB0ZXh0YXJlYTpmb2N1cywKLmFubm90YXRpb25MYXllciAuY2hvaWNlV2lkZ2V0QW5ub3RhdGlvbiBzZWxlY3Q6Zm9jdXMgewogIGJhY2tncm91bmQ6IG5vbmU7CiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24uY2hlY2tCb3ggaW5wdXQ6Y2hlY2tlZDpiZWZvcmUsCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24uY2hlY2tCb3ggaW5wdXQ6Y2hlY2tlZDphZnRlciwKLmFubm90YXRpb25MYXllciAuYnV0dG9uV2lkZ2V0QW5ub3RhdGlvbi5yYWRpb0J1dHRvbiBpbnB1dDpjaGVja2VkOmJlZm9yZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAxKTsKICBjb250ZW50OiAnJzsKICBkaXNwbGF5OiBibG9jazsKICBwb3NpdGlvbjogYWJzb2x1dGU7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24uY2hlY2tCb3ggaW5wdXQ6Y2hlY2tlZDpiZWZvcmUsCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24uY2hlY2tCb3ggaW5wdXQ6Y2hlY2tlZDphZnRlciB7CiAgaGVpZ2h0OiA4MCU7CiAgbGVmdDogNDUlOwogIHdpZHRoOiAxcHg7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24uY2hlY2tCb3ggaW5wdXQ6Y2hlY2tlZDpiZWZvcmUgewogIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsKfQoKLmFubm90YXRpb25MYXllciAuYnV0dG9uV2lkZ2V0QW5ub3RhdGlvbi5jaGVja0JveCBpbnB1dDpjaGVja2VkOmFmdGVyIHsKICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOwp9CgouYW5ub3RhdGlvbkxheWVyIC5idXR0b25XaWRnZXRBbm5vdGF0aW9uLnJhZGlvQnV0dG9uIGlucHV0OmNoZWNrZWQ6YmVmb3JlIHsKICBib3JkZXItcmFkaXVzOiA1MCU7CiAgaGVpZ2h0OiA1MCU7CiAgbGVmdDogMzAlOwogIHRvcDogMjAlOwogIHdpZHRoOiA1MCU7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLnRleHRXaWRnZXRBbm5vdGF0aW9uIGlucHV0LmNvbWIgewogIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7CiAgcGFkZGluZy1sZWZ0OiAycHg7CiAgcGFkZGluZy1yaWdodDogMDsKfQoKLmFubm90YXRpb25MYXllciAudGV4dFdpZGdldEFubm90YXRpb24gaW5wdXQuY29tYjpmb2N1cyB7CiAgLyoKICAgKiBMZXR0ZXIgc3BhY2luZyBpcyBwbGFjZWQgb24gdGhlIHJpZ2h0IHNpZGUgb2YgZWFjaCBjaGFyYWN0ZXIuIEhlbmNlLCB0aGUKICAgKiBsZXR0ZXIgc3BhY2luZyBvZiB0aGUgbGFzdCBjaGFyYWN0ZXIgbWF5IGJlIHBsYWNlZCBvdXRzaWRlIHRoZSB2aXNpYmxlCiAgICogYXJlYSwgY2F1c2luZyBob3Jpem9udGFsIHNjcm9sbGluZy4gV2UgYXZvaWQgdGhpcyBieSBleHRlbmRpbmcgdGhlIHdpZHRoCiAgICogd2hlbiB0aGUgZWxlbWVudCBoYXMgZm9jdXMgYW5kIHJldmVydCB0aGlzIHdoZW4gaXQgbG9zZXMgZm9jdXMuCiAgICovCiAgd2lkdGg6IDExNSU7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24uY2hlY2tCb3ggaW5wdXQsCi5hbm5vdGF0aW9uTGF5ZXIgLmJ1dHRvbldpZGdldEFubm90YXRpb24ucmFkaW9CdXR0b24gaW5wdXQgewogIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsKICAgICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7CiAgICAgICAgICBhcHBlYXJhbmNlOiBub25lOwogIHBhZGRpbmc6IDA7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLnBvcHVwV3JhcHBlciB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdpZHRoOiAyMGVtOwp9CgouYW5ub3RhdGlvbkxheWVyIC5wb3B1cCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHotaW5kZXg6IDIwMDsKICBtYXgtd2lkdGg6IDIwZW07CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMTUzLCAxKTsKICBib3gtc2hhZG93OiAwcHggMnB4IDVweCByZ2JhKDEzNiwgMTM2LCAxMzYsIDEpOwogIGJvcmRlci1yYWRpdXM6IDJweDsKICBwYWRkaW5nOiA2cHg7CiAgbWFyZ2luLWxlZnQ6IDVweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgZm9udDogbWVzc2FnZS1ib3g7CiAgZm9udC1zaXplOiA5cHg7CiAgd29yZC13cmFwOiBicmVhay13b3JkOwp9CgouYW5ub3RhdGlvbkxheWVyIC5wb3B1cCA+ICogewogIGZvbnQtc2l6ZTogOXB4Owp9CgouYW5ub3RhdGlvbkxheWVyIC5wb3B1cCBoMSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9CgouYW5ub3RhdGlvbkxheWVyIC5wb3B1cCBzcGFuIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luLWxlZnQ6IDVweDsKfQoKLmFubm90YXRpb25MYXllciAucG9wdXAgcCB7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoNTEsIDUxLCA1MSwgMSk7CiAgbWFyZ2luLXRvcDogMnB4OwogIHBhZGRpbmctdG9wOiAycHg7Cn0KCi5hbm5vdGF0aW9uTGF5ZXIgLmhpZ2hsaWdodEFubm90YXRpb24sCi5hbm5vdGF0aW9uTGF5ZXIgLnVuZGVybGluZUFubm90YXRpb24sCi5hbm5vdGF0aW9uTGF5ZXIgLnNxdWlnZ2x5QW5ub3RhdGlvbiwKLmFubm90YXRpb25MYXllciAuc3RyaWtlb3V0QW5ub3RhdGlvbiwKLmFubm90YXRpb25MYXllciAuZnJlZVRleHRBbm5vdGF0aW9uLAouYW5ub3RhdGlvbkxheWVyIC5saW5lQW5ub3RhdGlvbiBzdmcgbGluZSwKLmFubm90YXRpb25MYXllciAuc3F1YXJlQW5ub3RhdGlvbiBzdmcgcmVjdCwKLmFubm90YXRpb25MYXllciAuY2lyY2xlQW5ub3RhdGlvbiBzdmcgZWxsaXBzZSwKLmFubm90YXRpb25MYXllciAucG9seWxpbmVBbm5vdGF0aW9uIHN2ZyBwb2x5bGluZSwKLmFubm90YXRpb25MYXllciAucG9seWdvbkFubm90YXRpb24gc3ZnIHBvbHlnb24sCi5hbm5vdGF0aW9uTGF5ZXIgLmNhcmV0QW5ub3RhdGlvbiwKLmFubm90YXRpb25MYXllciAuaW5rQW5ub3RhdGlvbiBzdmcgcG9seWxpbmUsCi5hbm5vdGF0aW9uTGF5ZXIgLnN0YW1wQW5ub3RhdGlvbiwKLmFubm90YXRpb25MYXllciAuZmlsZUF0dGFjaG1lbnRBbm5vdGF0aW9uIHsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5wZGZWaWV3ZXIgLmNhbnZhc1dyYXBwZXIgewogIG92ZXJmbG93OiBoaWRkZW47Cn0KCi5wZGZWaWV3ZXIgLnBhZ2UgewogIGRpcmVjdGlvbjogbHRyOwogIHdpZHRoOiA4MTZweDsKICBoZWlnaHQ6IDEwNTZweDsKICBtYXJnaW46IDFweCBhdXRvIC04cHggYXV0bzsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgb3ZlcmZsb3c6IHZpc2libGU7CiAgYm9yZGVyOiA5cHggc29saWQgdHJhbnNwYXJlbnQ7CiAgYmFja2dyb3VuZC1jbGlwOiBjb250ZW50LWJveDsKICAtby1ib3JkZXItaW1hZ2U6IHVybChpbWFnZXMvc2hhZG93LnBuZykgOSA5IHJlcGVhdDsKICAgICBib3JkZXItaW1hZ2U6IHVybChpbWFnZXMvc2hhZG93LnBuZykgOSA5IHJlcGVhdDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpOwp9CgoucGRmVmlld2VyLnJlbW92ZVBhZ2VCb3JkZXJzIC5wYWdlIHsKICBtYXJnaW46IDBweCBhdXRvIDEwcHggYXV0bzsKICBib3JkZXI6IG5vbmU7Cn0KCi5wZGZWaWV3ZXIuc2luZ2xlUGFnZVZpZXcgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQoKLnBkZlZpZXdlci5zaW5nbGVQYWdlVmlldyAucGFnZSB7CiAgbWFyZ2luOiAwOwogIGJvcmRlcjogbm9uZTsKfQoKLnBkZlZpZXdlci5zY3JvbGxIb3Jpem9udGFsLCAucGRmVmlld2VyLnNjcm9sbFdyYXBwZWQsIC5zcHJlYWQgewogIG1hcmdpbi1sZWZ0OiAzLjVweDsKICBtYXJnaW4tcmlnaHQ6IDMuNXB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLnBkZlZpZXdlci5zY3JvbGxIb3Jpem9udGFsLCAuc3ByZWFkIHsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwp9CgoucGRmVmlld2VyLnJlbW92ZVBhZ2VCb3JkZXJzLAoucGRmVmlld2VyLnNjcm9sbEhvcml6b250YWwgLnNwcmVhZCwKLnBkZlZpZXdlci5zY3JvbGxXcmFwcGVkIC5zcHJlYWQgewogIG1hcmdpbi1sZWZ0OiAwOwogIG1hcmdpbi1yaWdodDogMDsKfQoKLnNwcmVhZCAucGFnZSwKLnBkZlZpZXdlci5zY3JvbGxIb3Jpem9udGFsIC5wYWdlLAoucGRmVmlld2VyLnNjcm9sbFdyYXBwZWQgLnBhZ2UsCi5wZGZWaWV3ZXIuc2Nyb2xsSG9yaXpvbnRhbCAuc3ByZWFkLAoucGRmVmlld2VyLnNjcm9sbFdyYXBwZWQgLnNwcmVhZCB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7Cn0KCi5zcHJlYWQgLnBhZ2UsCi5wZGZWaWV3ZXIuc2Nyb2xsSG9yaXpvbnRhbCAucGFnZSwKLnBkZlZpZXdlci5zY3JvbGxXcmFwcGVkIC5wYWdlIHsKICBtYXJnaW4tbGVmdDogLTMuNXB4OwogIG1hcmdpbi1yaWdodDogLTMuNXB4Owp9CgoucGRmVmlld2VyLnJlbW92ZVBhZ2VCb3JkZXJzIC5zcHJlYWQgLnBhZ2UsCi5wZGZWaWV3ZXIucmVtb3ZlUGFnZUJvcmRlcnMuc2Nyb2xsSG9yaXpvbnRhbCAucGFnZSwKLnBkZlZpZXdlci5yZW1vdmVQYWdlQm9yZGVycy5zY3JvbGxXcmFwcGVkIC5wYWdlIHsKICBtYXJnaW4tbGVmdDogNXB4OwogIG1hcmdpbi1yaWdodDogNXB4Owp9CgoucGRmVmlld2VyIC5wYWdlIGNhbnZhcyB7CiAgbWFyZ2luOiAwOwogIGRpc3BsYXk6IGJsb2NrOwp9CgoucGRmVmlld2VyIC5wYWdlIGNhbnZhc1toaWRkZW5dIHsKICBkaXNwbGF5OiBub25lOwp9CgoucGRmVmlld2VyIC5wYWdlIC5sb2FkaW5nSWNvbiB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGRpc3BsYXk6IGJsb2NrOwogIGxlZnQ6IDA7CiAgdG9wOiAwOwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICBiYWNrZ3JvdW5kOiB1cmwoJ2ltYWdlcy9sb2FkaW5nLWljb24uZ2lmJykgY2VudGVyIG5vLXJlcGVhdDsKfQoKLnBkZlByZXNlbnRhdGlvbk1vZGUgLnBkZlZpZXdlciB7CiAgbWFyZ2luLWxlZnQ6IDA7CiAgbWFyZ2luLXJpZ2h0OiAwOwp9CgoucGRmUHJlc2VudGF0aW9uTW9kZSAucGRmVmlld2VyIC5wYWdlLAoucGRmUHJlc2VudGF0aW9uTW9kZSAucGRmVmlld2VyIC5zcHJlYWQgewogIGRpc3BsYXk6IGJsb2NrOwp9CgoucGRmUHJlc2VudGF0aW9uTW9kZSAucGRmVmlld2VyIC5wYWdlLAoucGRmUHJlc2VudGF0aW9uTW9kZSAucGRmVmlld2VyLnJlbW92ZVBhZ2VCb3JkZXJzIC5wYWdlIHsKICBtYXJnaW4tbGVmdDogYXV0bzsKICBtYXJnaW4tcmlnaHQ6IGF1dG87Cn0KCi5wZGZQcmVzZW50YXRpb25Nb2RlOi1tcy1mdWxsc2NyZWVuIC5wZGZWaWV3ZXIgLnBhZ2UgewogIG1hcmdpbi1ib3R0b206IDEwMCUgIWltcG9ydGFudDsKfQoKLnBkZlByZXNlbnRhdGlvbk1vZGU6LXdlYmtpdC1mdWxsLXNjcmVlbiAucGRmVmlld2VyIC5wYWdlIHsKICBtYXJnaW4tYm90dG9tOiAxMDAlOwogIGJvcmRlcjogMDsKfQoKLnBkZlByZXNlbnRhdGlvbk1vZGU6LW1vei1mdWxsLXNjcmVlbiAucGRmVmlld2VyIC5wYWdlIHsKICBtYXJnaW4tYm90dG9tOiAxMDAlOwogIGJvcmRlcjogMDsKfQoKLnBkZlByZXNlbnRhdGlvbk1vZGU6ZnVsbHNjcmVlbiAucGRmVmlld2VyIC5wYWdlIHsKICBtYXJnaW4tYm90dG9tOiAxMDAlOwogIGJvcmRlcjogMDsKfQoKOnJvb3QgewogIC0tc2lkZWJhci13aWR0aDogMjAwcHg7CiAgLS1zaWRlYmFyLXRyYW5zaXRpb24tZHVyYXRpb246IDIwMG1zOwogIC0tc2lkZWJhci10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTsKfQoKKiB7CiAgcGFkZGluZzogMDsKICBtYXJnaW46IDA7Cn0KCmh0bWwgewogIGhlaWdodDogMTAwJTsKICB3aWR0aDogMTAwJTsKICAvKiBGb250IHNpemUgaXMgbmVlZGVkIHRvIG1ha2UgdGhlIGFjdGl2aXR5IGJhciB0aGUgY29ycmVjdCBzaXplLiAqLwogIGZvbnQtc2l6ZTogMTBweDsKfQoKYm9keSB7CiAgaGVpZ2h0OiAxMDAlOwogIHdpZHRoOiAxMDAlOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjQsIDY0LCA2NCwgMSk7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGltYWdlcy90ZXh0dXJlLnBuZyk7Cn0KCmJvZHksCmlucHV0LApidXR0b24sCnNlbGVjdCB7CiAgZm9udDogbWVzc2FnZS1ib3g7CiAgb3V0bGluZTogbm9uZTsKfQoKLmhpZGRlbiB7CiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50Owp9CltoaWRkZW5dIHsKICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7Cn0KCi5wZGZWaWV3ZXIuZW5hYmxlUGVybWlzc2lvbnMgLnRleHRMYXllciA+IHNwYW4gewogIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmUgIWltcG9ydGFudDsKICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lICFpbXBvcnRhbnQ7CiAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZSAhaW1wb3J0YW50OwogICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmUgIWltcG9ydGFudDsKICBjdXJzb3I6IG5vdC1hbGxvd2VkOwp9Cgojdmlld2VyQ29udGFpbmVyLnBkZlByZXNlbnRhdGlvbk1vZGU6LW1zLWZ1bGxzY3JlZW4gewogIHRvcDogMHB4ICFpbXBvcnRhbnQ7CiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50Owp9Cgojdmlld2VyQ29udGFpbmVyLnBkZlByZXNlbnRhdGlvbk1vZGU6LW1zLWZ1bGxzY3JlZW46Oi1tcy1iYWNrZHJvcCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAxKTsKfQoKI3ZpZXdlckNvbnRhaW5lci5wZGZQcmVzZW50YXRpb25Nb2RlOi13ZWJraXQtZnVsbC1zY3JlZW4gewogIHRvcDogMHB4OwogIGJvcmRlci10b3A6IDJweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDApOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMSk7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIG92ZXJmbG93OiBoaWRkZW47CiAgY3Vyc29yOiBub25lOwogIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTsKfQoKI3ZpZXdlckNvbnRhaW5lci5wZGZQcmVzZW50YXRpb25Nb2RlOi1tb3otZnVsbC1zY3JlZW4gewogIHRvcDogMHB4OwogIGJvcmRlci10b3A6IDJweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDApOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMSk7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIG92ZXJmbG93OiBoaWRkZW47CiAgY3Vyc29yOiBub25lOwogIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgICB1c2VyLXNlbGVjdDogbm9uZTsKfQoKI3ZpZXdlckNvbnRhaW5lci5wZGZQcmVzZW50YXRpb25Nb2RlOi1tcy1mdWxsc2NyZWVuIHsKICB0b3A6IDBweDsKICBib3JkZXItdG9wOiAycHggc29saWQgcmdiYSgwLCAwLCAwLCAwKTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDEpOwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICBvdmVyZmxvdzogaGlkZGVuOwogIGN1cnNvcjogbm9uZTsKICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgIHVzZXItc2VsZWN0OiBub25lOwp9Cgojdmlld2VyQ29udGFpbmVyLnBkZlByZXNlbnRhdGlvbk1vZGU6ZnVsbHNjcmVlbiB7CiAgdG9wOiAwcHg7CiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMCk7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAxKTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICBjdXJzb3I6IG5vbmU7CiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsKICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lOwogICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTsKfQoKLnBkZlByZXNlbnRhdGlvbk1vZGU6LXdlYmtpdC1mdWxsLXNjcmVlbiBhOm5vdCguaW50ZXJuYWxMaW5rKSB7CiAgZGlzcGxheTogbm9uZTsKfQoKLnBkZlByZXNlbnRhdGlvbk1vZGU6LW1vei1mdWxsLXNjcmVlbiBhOm5vdCguaW50ZXJuYWxMaW5rKSB7CiAgZGlzcGxheTogbm9uZTsKfQoKLnBkZlByZXNlbnRhdGlvbk1vZGU6LW1zLWZ1bGxzY3JlZW4gYTpub3QoLmludGVybmFsTGluaykgewogIGRpc3BsYXk6IG5vbmU7Cn0KCi5wZGZQcmVzZW50YXRpb25Nb2RlOmZ1bGxzY3JlZW4gYTpub3QoLmludGVybmFsTGluaykgewogIGRpc3BsYXk6IG5vbmU7Cn0KCi5wZGZQcmVzZW50YXRpb25Nb2RlOi13ZWJraXQtZnVsbC1zY3JlZW4gLnRleHRMYXllciA+IHNwYW4gewogIGN1cnNvcjogbm9uZTsKfQoKLnBkZlByZXNlbnRhdGlvbk1vZGU6LW1vei1mdWxsLXNjcmVlbiAudGV4dExheWVyID4gc3BhbiB7CiAgY3Vyc29yOiBub25lOwp9CgoucGRmUHJlc2VudGF0aW9uTW9kZTotbXMtZnVsbHNjcmVlbiAudGV4dExheWVyID4gc3BhbiB7CiAgY3Vyc29yOiBub25lOwp9CgoucGRmUHJlc2VudGF0aW9uTW9kZTpmdWxsc2NyZWVuIC50ZXh0TGF5ZXIgPiBzcGFuIHsKICBjdXJzb3I6IG5vbmU7Cn0KCi5wZGZQcmVzZW50YXRpb25Nb2RlLnBkZlByZXNlbnRhdGlvbk1vZGVDb250cm9scyA+ICosCi5wZGZQcmVzZW50YXRpb25Nb2RlLnBkZlByZXNlbnRhdGlvbk1vZGVDb250cm9scyAudGV4dExheWVyID4gc3BhbiB7CiAgY3Vyc29yOiBkZWZhdWx0Owp9Cgojb3V0ZXJDb250YWluZXIgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCiNzaWRlYmFyQ29udGFpbmVyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAzMnB4OwogIGJvdHRvbTogMDsKICB3aWR0aDogMjAwcHg7CiAgd2lkdGg6IHZhcigtLXNpZGViYXItd2lkdGgpOwogIHZpc2liaWxpdHk6IGhpZGRlbjsKICB6LWluZGV4OiAxMDA7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoNTEsIDUxLCA1MSwgMSk7CiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMjAwbXM7CiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogdmFyKC0tc2lkZWJhci10cmFuc2l0aW9uLWR1cmF0aW9uKTsKICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTsKICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogdmFyKC0tc2lkZWJhci10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbik7Cn0KaHRtbFtkaXI9J2x0ciddICNzaWRlYmFyQ29udGFpbmVyIHsKICB0cmFuc2l0aW9uLXByb3BlcnR5OiBsZWZ0OwogIGxlZnQ6IC0yMDBweDsKICBsZWZ0OiBjYWxjKDBweCAtIHZhcigtLXNpZGViYXItd2lkdGgpKTsKfQpodG1sW2Rpcj0ncnRsJ10gI3NpZGViYXJDb250YWluZXIgewogIHRyYW5zaXRpb24tcHJvcGVydHk6IHJpZ2h0OwogIHJpZ2h0OiAtMjAwcHg7CiAgcmlnaHQ6IGNhbGMoMHB4IC0gdmFyKC0tc2lkZWJhci13aWR0aCkpOwp9CgoubG9hZGluZ0luUHJvZ3Jlc3MgI3NpZGViYXJDb250YWluZXIgewogIHRvcDogMzZweDsKfQoKI291dGVyQ29udGFpbmVyLnNpZGViYXJSZXNpemluZyAjc2lkZWJhckNvbnRhaW5lciB7CiAgLyogSW1wcm92ZSByZXNwb25zaXZlbmVzcyBhbmQgYXZvaWQgdmlzdWFsIGdsaXRjaGVzIHdoZW4gdGhlIHNpZGViYXIgaXMgcmVzaXplZC4gKi8KICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwczsKICAvKiBQcmV2ZW50IGUuZy4gdGhlIHRodW1ibmFpbHMgYmVpbmcgc2VsZWN0ZWQgd2hlbiB0aGUgc2lkZWJhciBpcyByZXNpemVkLiAqLwogIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsKICAgICAgLW1zLXVzZXItc2VsZWN0OiBub25lOwogICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7Cn0KCiNvdXRlckNvbnRhaW5lci5zaWRlYmFyTW92aW5nICNzaWRlYmFyQ29udGFpbmVyLAojb3V0ZXJDb250YWluZXIuc2lkZWJhck9wZW4gI3NpZGViYXJDb250YWluZXIgewogIHZpc2liaWxpdHk6IHZpc2libGU7Cn0KaHRtbFtkaXI9J2x0ciddICNvdXRlckNvbnRhaW5lci5zaWRlYmFyT3BlbiAjc2lkZWJhckNvbnRhaW5lciB7CiAgbGVmdDogMHB4Owp9Cmh0bWxbZGlyPSdydGwnXSAjb3V0ZXJDb250YWluZXIuc2lkZWJhck9wZW4gI3NpZGViYXJDb250YWluZXIgewogIHJpZ2h0OiAwcHg7Cn0KCiNtYWluQ29udGFpbmVyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICBsZWZ0OiAwOwogIG1pbi13aWR0aDogMzIwcHg7Cn0KCiNzaWRlYmFyQ29udGVudCB7CiAgdG9wOiAzMnB4OwogIGJvdHRvbTogMDsKICBvdmVyZmxvdzogYXV0bzsKICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdpZHRoOiAxMDAlOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTsKfQpodG1sW2Rpcj0nbHRyJ10gI3NpZGViYXJDb250ZW50IHsKICBsZWZ0OiAwOwogIGJveC1zaGFkb3c6IGluc2V0IC0xcHggMCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7Cn0KaHRtbFtkaXI9J3J0bCddICNzaWRlYmFyQ29udGVudCB7CiAgcmlnaHQ6IDA7CiAgYm94LXNoYWRvdzogaW5zZXQgMXB4IDAgMCByZ2JhKDAsIDAsIDAsIDAuMjUpOwp9Cgojdmlld2VyQ29udGFpbmVyIHsKICBvdmVyZmxvdzogYXV0bzsKICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7CiAgcG9zaXRpb246IGFic29sdXRlOwogIC8qQ0hBTkdFRCB0b3A6IDMycHg7Ki8KICB0b3A6IDRweDsKICByaWdodDogMDsKICBib3R0b206IDA7CiAgbGVmdDogMDsKICBvdXRsaW5lOiBub25lOwp9CiN2aWV3ZXJDb250YWluZXI6bm90KC5wZGZQcmVzZW50YXRpb25Nb2RlKSB7CiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMjAwbXM7CiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogdmFyKC0tc2lkZWJhci10cmFuc2l0aW9uLWR1cmF0aW9uKTsKICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTsKICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogdmFyKC0tc2lkZWJhci10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbik7Cn0KaHRtbFtkaXI9J2x0ciddICN2aWV3ZXJDb250YWluZXIgewogIGJveC1zaGFkb3c6IGluc2V0IDFweCAwIDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsKfQpodG1sW2Rpcj0ncnRsJ10gI3ZpZXdlckNvbnRhaW5lciB7CiAgYm94LXNoYWRvdzogaW5zZXQgLTFweCAwIDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsKfQoKI291dGVyQ29udGFpbmVyLnNpZGViYXJSZXNpemluZyAjdmlld2VyQ29udGFpbmVyIHsKICAvKiBJbXByb3ZlIHJlc3BvbnNpdmVuZXNzIGFuZCBhdm9pZCB2aXN1YWwgZ2xpdGNoZXMgd2hlbiB0aGUgc2lkZWJhciBpcyByZXNpemVkLiAqLwogIHRyYW5zaXRpb24tZHVyYXRpb246IDBzOwp9CgpodG1sW2Rpcj0nbHRyJ10gI291dGVyQ29udGFpbmVyLnNpZGViYXJPcGVuICN2aWV3ZXJDb250YWluZXI6bm90KC5wZGZQcmVzZW50YXRpb25Nb2RlKSB7CiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogbGVmdDsKICBsZWZ0OiAyMDBweDsKICBsZWZ0OiB2YXIoLS1zaWRlYmFyLXdpZHRoKTsKfQpodG1sW2Rpcj0ncnRsJ10gI291dGVyQ29udGFpbmVyLnNpZGViYXJPcGVuICN2aWV3ZXJDb250YWluZXI6bm90KC5wZGZQcmVzZW50YXRpb25Nb2RlKSB7CiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogcmlnaHQ7CiAgcmlnaHQ6IDIwMHB4OwogIHJpZ2h0OiB2YXIoLS1zaWRlYmFyLXdpZHRoKTsKfQoKLnRvb2xiYXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBsZWZ0OiAwOwogIHJpZ2h0OiAwOwogIHotaW5kZXg6IDk5OTk7CiAgY3Vyc29yOiBkZWZhdWx0Owp9CgojdG9vbGJhckNvbnRhaW5lciB7CiAgd2lkdGg6IDEwMCU7Cn0KCiN0b29sYmFyU2lkZWJhciB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAzMnB4OwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjYsIDY2LCA2NiwgMSk7IC8qIGZhbGxiYWNrICovCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGltYWdlcy90ZXh0dXJlLnBuZyksCiAgICAgICAgICAgICAgICAgICAgbGluZWFyLWdyYWRpZW50KHJnYmEoNzcsIDc3LCA3NywgMC45OSksIHJnYmEoNjQsIDY0LCA2NCwgMC45NSkpOwp9Cmh0bWxbZGlyPSdsdHInXSAjdG9vbGJhclNpZGViYXIgewogIGJveC1zaGFkb3c6IGluc2V0IC0xcHggMCAwIHJnYmEoMCwgMCwgMCwgMC4yNSksCiAgICAgICAgICAgICAgaW5zZXQgMCAtMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KSwKICAgICAgICAgICAgICAwIDFweCAwIHJnYmEoMCwgMCwgMCwgMC4xNSksCiAgICAgICAgICAgICAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMSk7Cn0KaHRtbFtkaXI9J3J0bCddICN0b29sYmFyU2lkZWJhciB7CiAgYm94LXNoYWRvdzogaW5zZXQgMXB4IDAgMCByZ2JhKDAsIDAsIDAsIDAuMjUpLAogICAgICAgICAgICAgIGluc2V0IDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KSwKICAgICAgICAgICAgICAwIDFweCAwIHJnYmEoMCwgMCwgMCwgMC4xNSksCiAgICAgICAgICAgICAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMSk7Cn0KCiNzaWRlYmFyUmVzaXplciB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMDsKICBib3R0b206IDA7CiAgd2lkdGg6IDZweDsKICB6LWluZGV4OiAyMDA7CiAgY3Vyc29yOiBldy1yZXNpemU7Cn0KaHRtbFtkaXI9J2x0ciddICNzaWRlYmFyUmVzaXplciB7CiAgcmlnaHQ6IC02cHg7Cn0KaHRtbFtkaXI9J3J0bCddICNzaWRlYmFyUmVzaXplciB7CiAgbGVmdDogLTZweDsKfQoKI3Rvb2xiYXJDb250YWluZXIsIC5maW5kYmFyLCAuc2Vjb25kYXJ5VG9vbGJhciB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIC8qQ0hBTkdFRCBoZWlnaHQ6IDMycHg7Ki8KICBoZWlnaHQ6IDRweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDcxLCA3MSwgNzEsIDEpOyAvKiBmYWxsYmFjayAqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybChpbWFnZXMvdGV4dHVyZS5wbmcpLAogICAgICAgICAgICAgICAgICAgIGxpbmVhci1ncmFkaWVudChyZ2JhKDgyLCA4MiwgODIsIDAuOTkpLCByZ2JhKDY5LCA2OSwgNjksIDAuOTUpKTsKfQpodG1sW2Rpcj0nbHRyJ10gI3Rvb2xiYXJDb250YWluZXIsIC5maW5kYmFyLCAuc2Vjb25kYXJ5VG9vbGJhciB7CiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xNSksCiAgICAgICAgICAgICAgaW5zZXQgMCAtMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KSwKICAgICAgICAgICAgICAwIDFweCAwIHJnYmEoMCwgMCwgMCwgMC4xNSksCiAgICAgICAgICAgICAgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKfQpodG1sW2Rpcj0ncnRsJ10gI3Rvb2xiYXJDb250YWluZXIsIC5maW5kYmFyLCAuc2Vjb25kYXJ5VG9vbGJhciB7CiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xNSksCiAgICAgICAgICAgICAgaW5zZXQgMCAtMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KSwKICAgICAgICAgICAgICAwIDFweCAwIHJnYmEoMCwgMCwgMCwgMC4xNSksCiAgICAgICAgICAgICAgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKfQoKI3Rvb2xiYXJWaWV3ZXIgewogIGhlaWdodDogMzJweDsKfQoKI2xvYWRpbmdCYXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDRweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDUxLCA1MSwgNTEsIDEpOwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDUxLCA1MSwgNTEsIDEpOwp9CgojbG9hZGluZ0JhciAucHJvZ3Jlc3MgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDA7CiAgbGVmdDogMDsKICB3aWR0aDogMCU7CiAgaGVpZ2h0OiAxMDAlOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjIxLCAyMjEsIDIyMSwgMSk7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICB0cmFuc2l0aW9uOiB3aWR0aCAyMDBtczsKfQoKQC13ZWJraXQta2V5ZnJhbWVzIHByb2dyZXNzSW5kZXRlcm1pbmF0ZSB7CiAgMCUgeyBsZWZ0OiAtMTQycHg7IH0KICAxMDAlIHsgbGVmdDogMDsgfQp9CgpAa2V5ZnJhbWVzIHByb2dyZXNzSW5kZXRlcm1pbmF0ZSB7CiAgMCUgeyBsZWZ0OiAtMTQycHg7IH0KICAxMDAlIHsgbGVmdDogMDsgfQp9CgojbG9hZGluZ0JhciAucHJvZ3Jlc3MuaW5kZXRlcm1pbmF0ZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNTMsIDE1MywgMTUzLCAxKTsKICB0cmFuc2l0aW9uOiBub25lOwp9CgojbG9hZGluZ0JhciAucHJvZ3Jlc3MuaW5kZXRlcm1pbmF0ZSAuZ2xpbW1lciB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMDsKICBsZWZ0OiAwOwogIGhlaWdodDogMTAwJTsKICB3aWR0aDogY2FsYygxMDAlICsgMTUwcHgpOwogIGJhY2tncm91bmQ6IHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoMTM1ZGVnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmdiYSgxODcsIDE4NywgMTg3LCAxKSAwLCByZ2JhKDE1MywgMTUzLCAxNTMsIDEpIDVweCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJnYmEoMTUzLCAxNTMsIDE1MywgMSkgNDVweCwgcmdiYSgyMjEsIDIyMSwgMjIxLCAxKSA1NXB4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmdiYSgyMjEsIDIyMSwgMjIxLCAxKSA5NXB4LCByZ2JhKDE4NywgMTg3LCAxODcsIDEpIDEwMHB4KTsKICAtd2Via2l0LWFuaW1hdGlvbjogcHJvZ3Jlc3NJbmRldGVybWluYXRlIDk1MG1zIGxpbmVhciBpbmZpbml0ZTsKICAgICAgICAgIGFuaW1hdGlvbjogcHJvZ3Jlc3NJbmRldGVybWluYXRlIDk1MG1zIGxpbmVhciBpbmZpbml0ZTsKfQoKLmZpbmRiYXIsIC5zZWNvbmRhcnlUb29sYmFyIHsKICB0b3A6IDMycHg7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHotaW5kZXg6IDEwMDAwOwogIGhlaWdodDogYXV0bzsKICBtaW4td2lkdGg6IDE2cHg7CiAgcGFkZGluZzogMHB4IDZweCAwcHggNnB4OwogIG1hcmdpbjogNHB4IDJweCA0cHggMnB4OwogIGNvbG9yOiByZ2JhKDIxNywgMjE3LCAyMTcsIDEpOwogIGZvbnQtc2l6ZTogMTJweDsKICBsaW5lLWhlaWdodDogMTRweDsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIGN1cnNvcjogZGVmYXVsdDsKfQoKLmZpbmRiYXIgewogIG1pbi13aWR0aDogMzAwcHg7Cn0KLmZpbmRiYXIgPiBkaXYgewogIGhlaWdodDogMzJweDsKfQouZmluZGJhci53cmFwQ29udGFpbmVycyA+IGRpdiB7CiAgY2xlYXI6IGJvdGg7Cn0KLmZpbmRiYXIud3JhcENvbnRhaW5lcnMgPiBkaXYjZmluZGJhck1lc3NhZ2VDb250YWluZXIgewogIGhlaWdodDogYXV0bzsKfQpodG1sW2Rpcj0nbHRyJ10gLmZpbmRiYXIgewogIGxlZnQ6IDY4cHg7Cn0KaHRtbFtkaXI9J3J0bCddIC5maW5kYmFyIHsKICByaWdodDogNjhweDsKfQoKLmZpbmRiYXIgbGFiZWwgewogIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsKICAgICAgLW1zLXVzZXItc2VsZWN0OiBub25lOwogICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7Cn0KCiNmaW5kSW5wdXQgewogIHdpZHRoOiAyMDBweDsKfQojZmluZElucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHsKICBjb2xvcjogcmdiYSgxOTEsIDE5MSwgMTkxLCAxKTsKfQojZmluZElucHV0OjotbW96LXBsYWNlaG9sZGVyIHsKICBmb250LXN0eWxlOiBpdGFsaWM7Cn0KI2ZpbmRJbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIgewogIGZvbnQtc3R5bGU6IGl0YWxpYzsKfQojZmluZElucHV0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIgewogIGZvbnQtc3R5bGU6IGl0YWxpYzsKfQojZmluZElucHV0OjpwbGFjZWhvbGRlciB7CiAgZm9udC1zdHlsZTogaXRhbGljOwp9CiNmaW5kSW5wdXRbZGF0YS1zdGF0dXM9InBlbmRpbmciXSB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGltYWdlcy9sb2FkaW5nLXNtYWxsLnBuZyk7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodDsKfQpodG1sW2Rpcj0ncnRsJ10gI2ZpbmRJbnB1dFtkYXRhLXN0YXR1cz0icGVuZGluZyJdIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0Owp9Cgouc2Vjb25kYXJ5VG9vbGJhciB7CiAgcGFkZGluZzogNnB4OwogIGhlaWdodDogYXV0bzsKICB6LWluZGV4OiAzMDAwMDsKfQpodG1sW2Rpcj0nbHRyJ10gLnNlY29uZGFyeVRvb2xiYXIgewogIHJpZ2h0OiA0cHg7Cn0KaHRtbFtkaXI9J3J0bCddIC5zZWNvbmRhcnlUb29sYmFyIHsKICBsZWZ0OiA0cHg7Cn0KCiNzZWNvbmRhcnlUb29sYmFyQnV0dG9uQ29udGFpbmVyIHsKICBtYXgtd2lkdGg6IDIwMHB4OwogIG1heC1oZWlnaHQ6IDQwMHB4OwogIG92ZXJmbG93LXk6IGF1dG87CiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoOwogIG1hcmdpbi1ib3R0b206IC00cHg7Cn0KCiNzZWNvbmRhcnlUb29sYmFyQnV0dG9uQ29udGFpbmVyLmhpZGRlblNjcm9sbE1vZGVCdXR0b25zID4gLnNjcm9sbE1vZGVCdXR0b25zLAojc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbkNvbnRhaW5lci5oaWRkZW5TcHJlYWRNb2RlQnV0dG9ucyA+IC5zcHJlYWRNb2RlQnV0dG9ucyB7CiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50Owp9CgouZG9vckhhbmdlciwKLmRvb3JIYW5nZXJSaWdodCB7CiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjUpOwogIGJvcmRlci1yYWRpdXM6IDJweDsKICBib3gtc2hhZG93OiAwIDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjMpOwp9Ci5kb29ySGFuZ2VyOmFmdGVyLCAuZG9vckhhbmdlcjpiZWZvcmUsCi5kb29ySGFuZ2VyUmlnaHQ6YWZ0ZXIsIC5kb29ySGFuZ2VyUmlnaHQ6YmVmb3JlIHsKICBib3R0b206IDEwMCU7CiAgYm9yZGVyOiBzb2xpZCByZ2JhKDAsIDAsIDAsIDApOwogIGNvbnRlbnQ6ICIgIjsKICBoZWlnaHQ6IDA7CiAgd2lkdGg6IDA7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHBvaW50ZXItZXZlbnRzOiBub25lOwp9Ci5kb29ySGFuZ2VyOmFmdGVyLAouZG9vckhhbmdlclJpZ2h0OmFmdGVyIHsKICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDgyLCA4MiwgODIsIDAuOTkpOwogIGJvcmRlci13aWR0aDogOHB4Owp9Ci5kb29ySGFuZ2VyOmJlZm9yZSwKLmRvb3JIYW5nZXJSaWdodDpiZWZvcmUgewogIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTsKICBib3JkZXItd2lkdGg6IDlweDsKfQoKaHRtbFtkaXI9J2x0ciddIC5kb29ySGFuZ2VyOmFmdGVyLApodG1sW2Rpcj0ncnRsJ10gLmRvb3JIYW5nZXJSaWdodDphZnRlciB7CiAgbGVmdDogMTNweDsKICBtYXJnaW4tbGVmdDogLThweDsKfQoKaHRtbFtkaXI9J2x0ciddIC5kb29ySGFuZ2VyOmJlZm9yZSwKaHRtbFtkaXI9J3J0bCddIC5kb29ySGFuZ2VyUmlnaHQ6YmVmb3JlIHsKICBsZWZ0OiAxM3B4OwogIG1hcmdpbi1sZWZ0OiAtOXB4Owp9CgpodG1sW2Rpcj0ncnRsJ10gLmRvb3JIYW5nZXI6YWZ0ZXIsCmh0bWxbZGlyPSdsdHInXSAuZG9vckhhbmdlclJpZ2h0OmFmdGVyIHsKICByaWdodDogMTNweDsKICBtYXJnaW4tcmlnaHQ6IC04cHg7Cn0KCmh0bWxbZGlyPSdydGwnXSAuZG9vckhhbmdlcjpiZWZvcmUsCmh0bWxbZGlyPSdsdHInXSAuZG9vckhhbmdlclJpZ2h0OmJlZm9yZSB7CiAgcmlnaHQ6IDEzcHg7CiAgbWFyZ2luLXJpZ2h0OiAtOXB4Owp9CgojZmluZFJlc3VsdHNDb3VudCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMTcsIDIxNywgMjE3LCAxKTsKICBjb2xvcjogcmdiYSg4MiwgODIsIDgyLCAxKTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZzogM3B4IDRweDsKfQoKI2ZpbmRNc2cgewogIGZvbnQtc3R5bGU6IGl0YWxpYzsKICBjb2xvcjogcmdiYSgxNjYsIDE4MywgMjA4LCAxKTsKfQojZmluZE1zZzplbXB0eSB7CiAgZGlzcGxheTogbm9uZTsKfQoKI2ZpbmRJbnB1dC5ub3RGb3VuZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDEwMiwgMTAyLCAxKTsKfQoKI3Rvb2xiYXJWaWV3ZXJNaWRkbGUgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiA1MCU7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOwp9CgpodG1sW2Rpcj0nbHRyJ10gI3Rvb2xiYXJWaWV3ZXJMZWZ0LApodG1sW2Rpcj0ncnRsJ10gI3Rvb2xiYXJWaWV3ZXJSaWdodCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KaHRtbFtkaXI9J2x0ciddICN0b29sYmFyVmlld2VyUmlnaHQsCmh0bWxbZGlyPSdydGwnXSAjdG9vbGJhclZpZXdlckxlZnQgewogIGZsb2F0OiByaWdodDsKfQpodG1sW2Rpcj0nbHRyJ10gI3Rvb2xiYXJWaWV3ZXJMZWZ0ID4gKiwKaHRtbFtkaXI9J2x0ciddICN0b29sYmFyVmlld2VyTWlkZGxlID4gKiwKaHRtbFtkaXI9J2x0ciddICN0b29sYmFyVmlld2VyUmlnaHQgPiAqLApodG1sW2Rpcj0nbHRyJ10gLmZpbmRiYXIgKiB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGZsb2F0OiBsZWZ0Owp9Cmh0bWxbZGlyPSdydGwnXSAjdG9vbGJhclZpZXdlckxlZnQgPiAqLApodG1sW2Rpcj0ncnRsJ10gI3Rvb2xiYXJWaWV3ZXJNaWRkbGUgPiAqLApodG1sW2Rpcj0ncnRsJ10gI3Rvb2xiYXJWaWV3ZXJSaWdodCA+ICosCmh0bWxbZGlyPSdydGwnXSAuZmluZGJhciAqIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZmxvYXQ6IHJpZ2h0Owp9CgpodG1sW2Rpcj0nbHRyJ10gLnNwbGl0VG9vbGJhckJ1dHRvbiB7CiAgbWFyZ2luOiAzcHggMnB4IDRweCAwOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQpodG1sW2Rpcj0ncnRsJ10gLnNwbGl0VG9vbGJhckJ1dHRvbiB7CiAgbWFyZ2luOiAzcHggMCA0cHggMnB4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQpodG1sW2Rpcj0nbHRyJ10gLnNwbGl0VG9vbGJhckJ1dHRvbiA+IC50b29sYmFyQnV0dG9uIHsKICBib3JkZXItcmFkaXVzOiAwOwogIGZsb2F0OiBsZWZ0Owp9Cmh0bWxbZGlyPSdydGwnXSAuc3BsaXRUb29sYmFyQnV0dG9uID4gLnRvb2xiYXJCdXR0b24gewogIGJvcmRlci1yYWRpdXM6IDA7CiAgZmxvYXQ6IHJpZ2h0Owp9CgoudG9vbGJhckJ1dHRvbiwKLnNlY29uZGFyeVRvb2xiYXJCdXR0b24sCi5vdmVybGF5QnV0dG9uIHsKICBib3JkZXI6IDAgbm9uZTsKICBiYWNrZ3JvdW5kOiBub25lOwogIHdpZHRoOiAzMnB4OwogIGhlaWdodDogMjVweDsKfQoKLnRvb2xiYXJCdXR0b24gPiBzcGFuIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgd2lkdGg6IDA7CiAgaGVpZ2h0OiAwOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KCi50b29sYmFyQnV0dG9uW2Rpc2FibGVkXSwKLnNlY29uZGFyeVRvb2xiYXJCdXR0b25bZGlzYWJsZWRdLAoub3ZlcmxheUJ1dHRvbltkaXNhYmxlZF0gewogIG9wYWNpdHk6IC41Owp9Cgouc3BsaXRUb29sYmFyQnV0dG9uLnRvZ2dsZWQgLnRvb2xiYXJCdXR0b24gewogIG1hcmdpbjogMDsKfQoKLnNwbGl0VG9vbGJhckJ1dHRvbjpob3ZlciA+IC50b29sYmFyQnV0dG9uLAouc3BsaXRUb29sYmFyQnV0dG9uOmZvY3VzID4gLnRvb2xiYXJCdXR0b24sCi5zcGxpdFRvb2xiYXJCdXR0b24udG9nZ2xlZCA+IC50b29sYmFyQnV0dG9uLAoudG9vbGJhckJ1dHRvbi50ZXh0QnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTIpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApKTsKICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OwogIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4zNSk7CiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzIpIHJnYmEoMCwgMCwgMCwgMC4zOCkgcmdiYSgwLCAwLCAwLCAwLjQyKTsKICBib3gtc2hhZG93OiAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSkgaW5zZXQsCiAgICAgICAgICAgICAgMCAwIDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIGluc2V0LAogICAgICAgICAgICAgIDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsKfQouc3BsaXRUb29sYmFyQnV0dG9uID4gLnRvb2xiYXJCdXR0b246aG92ZXIsCi5zcGxpdFRvb2xiYXJCdXR0b24gPiAudG9vbGJhckJ1dHRvbjpmb2N1cywKLmRyb3Bkb3duVG9vbGJhckJ1dHRvbjpob3ZlciwKLm92ZXJsYXlCdXR0b246aG92ZXIsCi5vdmVybGF5QnV0dG9uOmZvY3VzLAoudG9vbGJhckJ1dHRvbi50ZXh0QnV0dG9uOmhvdmVyLAoudG9vbGJhckJ1dHRvbi50ZXh0QnV0dG9uOmZvY3VzIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuMik7CiAgYm94LXNoYWRvdzogMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpIGluc2V0LAogICAgICAgICAgICAgIDAgMCAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSBpbnNldCwKICAgICAgICAgICAgICAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7CiAgei1pbmRleDogMTk5Owp9Ci5kcm9wZG93blRvb2xiYXJCdXR0b246aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNik7Cn0KLnNwbGl0VG9vbGJhckJ1dHRvbiA+IC50b29sYmFyQnV0dG9uIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KaHRtbFtkaXI9J2x0ciddIC5zcGxpdFRvb2xiYXJCdXR0b24gPiAudG9vbGJhckJ1dHRvbjpmaXJzdC1jaGlsZCwKaHRtbFtkaXI9J3J0bCddIC5zcGxpdFRvb2xiYXJCdXR0b24gPiAudG9vbGJhckJ1dHRvbjpsYXN0LWNoaWxkIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgbWFyZ2luOiAwOwogIG1hcmdpbi1yaWdodDogLTFweDsKICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAycHg7CiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMnB4OwogIGJvcmRlci1yaWdodC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTsKfQpodG1sW2Rpcj0nbHRyJ10gLnNwbGl0VG9vbGJhckJ1dHRvbiA+IC50b29sYmFyQnV0dG9uOmxhc3QtY2hpbGQsCmh0bWxbZGlyPSdydGwnXSAuc3BsaXRUb29sYmFyQnV0dG9uID4gLnRvb2xiYXJCdXR0b246Zmlyc3QtY2hpbGQgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtYXJnaW46IDA7CiAgbWFyZ2luLWxlZnQ6IC0xcHg7CiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDJweDsKICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMnB4OwogIGJvcmRlci1sZWZ0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApOwp9Ci5zcGxpdFRvb2xiYXJCdXR0b25TZXBhcmF0b3IgewogIHBhZGRpbmc6IDhweCAwOwogIHdpZHRoOiAxcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOwogIHotaW5kZXg6IDk5OwogIGJveC1zaGFkb3c6IDAgMCAwIDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDVweCAwOwp9Cmh0bWxbZGlyPSdsdHInXSAuc3BsaXRUb29sYmFyQnV0dG9uU2VwYXJhdG9yIHsKICBmbG9hdDogbGVmdDsKfQpodG1sW2Rpcj0ncnRsJ10gLnNwbGl0VG9vbGJhckJ1dHRvblNlcGFyYXRvciB7CiAgZmxvYXQ6IHJpZ2h0Owp9Ci5zcGxpdFRvb2xiYXJCdXR0b246aG92ZXIgPiAuc3BsaXRUb29sYmFyQnV0dG9uU2VwYXJhdG9yLAouc3BsaXRUb29sYmFyQnV0dG9uLnRvZ2dsZWQgPiAuc3BsaXRUb29sYmFyQnV0dG9uU2VwYXJhdG9yIHsKICBwYWRkaW5nOiAxMnB4IDA7CiAgbWFyZ2luOiAxcHggMDsKICBib3gtc2hhZG93OiAwIDAgMCAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAzKTsKfQoKLnRvb2xiYXJCdXR0b24sCi5kcm9wZG93blRvb2xiYXJCdXR0b24sCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLAoub3ZlcmxheUJ1dHRvbiB7CiAgbWluLXdpZHRoOiAxNnB4OwogIHBhZGRpbmc6IDJweCA2cHggMDsKICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDApOwogIGJvcmRlci1yYWRpdXM6IDJweDsKICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpOwogIGZvbnQtc2l6ZTogMTJweDsKICBsaW5lLWhlaWdodDogMTRweDsKICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOwogICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTsKICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lOwogIC8qIE9wZXJhIGRvZXMgbm90IHN1cHBvcnQgdXNlci1zZWxlY3QsIHVzZSA8Li4uIHVuc2VsZWN0YWJsZT0ib24iPiBpbnN0ZWFkICovCiAgY3Vyc29yOiBkZWZhdWx0Owp9CgpodG1sW2Rpcj0nbHRyJ10gLnRvb2xiYXJCdXR0b24sCmh0bWxbZGlyPSdsdHInXSAub3ZlcmxheUJ1dHRvbiwKaHRtbFtkaXI9J2x0ciddIC5kcm9wZG93blRvb2xiYXJCdXR0b24gewogIG1hcmdpbjogM3B4IDJweCA0cHggMDsKfQpodG1sW2Rpcj0ncnRsJ10gLnRvb2xiYXJCdXR0b24sCmh0bWxbZGlyPSdydGwnXSAub3ZlcmxheUJ1dHRvbiwKaHRtbFtkaXI9J3J0bCddIC5kcm9wZG93blRvb2xiYXJCdXR0b24gewogIG1hcmdpbjogM3B4IDAgNHB4IDJweDsKfQoKLnRvb2xiYXJCdXR0b246aG92ZXIsCi50b29sYmFyQnV0dG9uOmZvY3VzLAouZHJvcGRvd25Ub29sYmFyQnV0dG9uLAoub3ZlcmxheUJ1dHRvbiwKLnNlY29uZGFyeVRvb2xiYXJCdXR0b246aG92ZXIsCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uOmZvY3VzIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTIpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApKTsKICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OwogIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4zNSk7CiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzIpIHJnYmEoMCwgMCwgMCwgMC4zOCkgcmdiYSgwLCAwLCAwLCAwLjQyKTsKICBib3gtc2hhZG93OiAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSkgaW5zZXQsCiAgICAgICAgICAgICAgMCAwIDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIGluc2V0LAogICAgICAgICAgICAgIDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsKfQoKLnRvb2xiYXJCdXR0b246aG92ZXI6YWN0aXZlLAoub3ZlcmxheUJ1dHRvbjpob3ZlcjphY3RpdmUsCi5kcm9wZG93blRvb2xiYXJCdXR0b246aG92ZXI6YWN0aXZlLAouc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbjpob3ZlcjphY3RpdmUgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQocmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSk7CiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzUpIHJnYmEoMCwgMCwgMCwgMC40KSByZ2JhKDAsIDAsIDAsIDAuNDUpOwogIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMSkgaW5zZXQsCiAgICAgICAgICAgICAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMikgaW5zZXQsCiAgICAgICAgICAgICAgMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOwp9CgoudG9vbGJhckJ1dHRvbi50b2dnbGVkLAouc3BsaXRUb29sYmFyQnV0dG9uLnRvZ2dsZWQgPiAudG9vbGJhckJ1dHRvbi50b2dnbGVkLAouc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi50b2dnbGVkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSksIHJnYmEoMjU1LCAyNTUsIDI1NSwgMCkpOwogIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpIHJnYmEoMCwgMCwgMCwgMC40NSkgcmdiYSgwLCAwLCAwLCAwLjUpOwogIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMSkgaW5zZXQsCiAgICAgICAgICAgICAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMikgaW5zZXQsCiAgICAgICAgICAgICAgMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOwp9CgoudG9vbGJhckJ1dHRvbi50b2dnbGVkOmhvdmVyOmFjdGl2ZSwKLnNwbGl0VG9vbGJhckJ1dHRvbi50b2dnbGVkID4gLnRvb2xiYXJCdXR0b24udG9nZ2xlZDpob3ZlcjphY3RpdmUsCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLnRvZ2dsZWQ6aG92ZXI6YWN0aXZlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7CiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCkgcmdiYSgwLCAwLCAwLCAwLjUpIHJnYmEoMCwgMCwgMCwgMC41NSk7CiAgYm94LXNoYWRvdzogMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSBpbnNldCwKICAgICAgICAgICAgICAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4zKSBpbnNldCwKICAgICAgICAgICAgICAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7Cn0KCi5kcm9wZG93blRvb2xiYXJCdXR0b24gewogIHdpZHRoOiAxNDBweDsKICBwYWRkaW5nOiAwOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KLmRyb3Bkb3duVG9vbGJhckJ1dHRvbjo6YWZ0ZXIgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgdG9wOiA0cHg7CiAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLW1lbnVBcnJvd3MucG5nKTsKfQpodG1sW2Rpcj0nbHRyJ10gLmRyb3Bkb3duVG9vbGJhckJ1dHRvbjo6YWZ0ZXIgewogIHJpZ2h0OiA4cHg7Cn0KaHRtbFtkaXI9J3J0bCddIC5kcm9wZG93blRvb2xiYXJCdXR0b246OmFmdGVyIHsKICBsZWZ0OiA4cHg7Cn0KCi5kcm9wZG93blRvb2xiYXJCdXR0b24gPiBzZWxlY3QgewogIHdpZHRoOiAxNjJweDsKICBoZWlnaHQ6IDIzcHg7CiAgZm9udC1zaXplOiAxMnB4OwogIGNvbG9yOiByZ2JhKDI0MiwgMjQyLCAyNDIsIDEpOwogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAzcHggMnB4IDJweDsKICBib3JkZXI6IG5vbmU7CiAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwKTsgLyogT3BlcmEgZG9lcyBub3Qgc3VwcG9ydCAndHJhbnNwYXJlbnQnIDxzZWxlY3Q+IGJhY2tncm91bmQgKi8KfQoKLmRyb3Bkb3duVG9vbGJhckJ1dHRvbiA+IHNlbGVjdCA+IG9wdGlvbiB7CiAgYmFja2dyb3VuZDogcmdiYSg2MSwgNjEsIDYxLCAxKTsKfQoKI2N1c3RvbVNjYWxlT3B0aW9uIHsKICBkaXNwbGF5OiBub25lOwp9CgojcGFnZVdpZHRoT3B0aW9uIHsKICBib3JkZXItYm90dG9tOiAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpIHNvbGlkOwp9CgpodG1sW2Rpcj0nbHRyJ10gLnNwbGl0VG9vbGJhckJ1dHRvbjpmaXJzdC1jaGlsZCwKaHRtbFtkaXI9J2x0ciddIC50b29sYmFyQnV0dG9uOmZpcnN0LWNoaWxkLApodG1sW2Rpcj0ncnRsJ10gLnNwbGl0VG9vbGJhckJ1dHRvbjpsYXN0LWNoaWxkLApodG1sW2Rpcj0ncnRsJ10gLnRvb2xiYXJCdXR0b246bGFzdC1jaGlsZCB7CiAgbWFyZ2luLWxlZnQ6IDRweDsKfQpodG1sW2Rpcj0nbHRyJ10gLnNwbGl0VG9vbGJhckJ1dHRvbjpsYXN0LWNoaWxkLApodG1sW2Rpcj0nbHRyJ10gLnRvb2xiYXJCdXR0b246bGFzdC1jaGlsZCwKaHRtbFtkaXI9J3J0bCddIC5zcGxpdFRvb2xiYXJCdXR0b246Zmlyc3QtY2hpbGQsCmh0bWxbZGlyPSdydGwnXSAudG9vbGJhckJ1dHRvbjpmaXJzdC1jaGlsZCB7CiAgbWFyZ2luLXJpZ2h0OiA0cHg7Cn0KCi50b29sYmFyQnV0dG9uU3BhY2VyIHsKICB3aWR0aDogMzBweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgaGVpZ2h0OiAxcHg7Cn0KCmh0bWxbZGlyPSdsdHInXSAjZmluZFByZXZpb3VzIHsKICBtYXJnaW4tbGVmdDogM3B4Owp9Cmh0bWxbZGlyPSdsdHInXSAjZmluZE5leHQgewogIG1hcmdpbi1yaWdodDogM3B4Owp9CgpodG1sW2Rpcj0ncnRsJ10gI2ZpbmRQcmV2aW91cyB7CiAgbWFyZ2luLXJpZ2h0OiAzcHg7Cn0KaHRtbFtkaXI9J3J0bCddICNmaW5kTmV4dCB7CiAgbWFyZ2luLWxlZnQ6IDNweDsKfQoKLnRvb2xiYXJCdXR0b246OmJlZm9yZSwKLnNlY29uZGFyeVRvb2xiYXJCdXR0b246OmJlZm9yZSB7CiAgLyogQWxsIG1hdGNoaW5nIGltYWdlcyBoYXZlIGEgc2l6ZSBvZiAxNngxNgogICAqIEFsbCByZWxldmFudCBjb250YWluZXJzIGhhdmUgYSBzaXplIG9mIDMyeDI1ICovCiAgcG9zaXRpb246IGFic29sdXRlOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB0b3A6IDRweDsKICBsZWZ0OiA3cHg7Cn0KCmh0bWxbZGlyPSJsdHIiXSAuc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbjo6YmVmb3JlIHsKICBsZWZ0OiA0cHg7Cn0KaHRtbFtkaXI9InJ0bCJdIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uOjpiZWZvcmUgewogIHJpZ2h0OiA0cHg7Cn0KCi50b29sYmFyQnV0dG9uI3NpZGViYXJUb2dnbGU6OmJlZm9yZSB7CiAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXNpZGViYXJUb2dnbGUucG5nKTsKfQpodG1sW2Rpcj0ncnRsJ10gLnRvb2xiYXJCdXR0b24jc2lkZWJhclRvZ2dsZTo6YmVmb3JlIHsKICB0cmFuc2Zvcm06IHNjYWxlWCgtMSk7Cn0KCi50b29sYmFyQnV0dG9uI3NlY29uZGFyeVRvb2xiYXJUb2dnbGU6OmJlZm9yZSB7CiAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXNlY29uZGFyeVRvb2xiYXJUb2dnbGUucG5nKTsKfQpodG1sW2Rpcj0ncnRsJ10gLnRvb2xiYXJCdXR0b24jc2Vjb25kYXJ5VG9vbGJhclRvZ2dsZTo6YmVmb3JlIHsKICB0cmFuc2Zvcm06IHNjYWxlWCgtMSk7Cn0KCi50b29sYmFyQnV0dG9uLmZpbmRQcmV2aW91czo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL2ZpbmRiYXJCdXR0b24tcHJldmlvdXMucG5nKTsKfQpodG1sW2Rpcj0ncnRsJ10gLnRvb2xiYXJCdXR0b24uZmluZFByZXZpb3VzOjpiZWZvcmUgewogIHRyYW5zZm9ybTogc2NhbGVYKC0xKTsKfQoKLnRvb2xiYXJCdXR0b24uZmluZE5leHQ6OmJlZm9yZSB7CiAgY29udGVudDogdXJsKGltYWdlcy9maW5kYmFyQnV0dG9uLW5leHQucG5nKTsKfQpodG1sW2Rpcj0ncnRsJ10gLnRvb2xiYXJCdXR0b24uZmluZE5leHQ6OmJlZm9yZSB7CiAgdHJhbnNmb3JtOiBzY2FsZVgoLTEpOwp9CgoudG9vbGJhckJ1dHRvbi5wYWdlVXA6OmJlZm9yZSB7CiAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXBhZ2VVcC5wbmcpOwp9Cmh0bWxbZGlyPSdydGwnXSAudG9vbGJhckJ1dHRvbi5wYWdlVXA6OmJlZm9yZSB7CiAgdHJhbnNmb3JtOiBzY2FsZVgoLTEpOwp9CgoudG9vbGJhckJ1dHRvbi5wYWdlRG93bjo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3Rvb2xiYXJCdXR0b24tcGFnZURvd24ucG5nKTsKfQpodG1sW2Rpcj0ncnRsJ10gLnRvb2xiYXJCdXR0b24ucGFnZURvd246OmJlZm9yZSB7CiAgdHJhbnNmb3JtOiBzY2FsZVgoLTEpOwp9CgoudG9vbGJhckJ1dHRvbi56b29tT3V0OjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvdG9vbGJhckJ1dHRvbi16b29tT3V0LnBuZyk7Cn0KCi50b29sYmFyQnV0dG9uLnpvb21Jbjo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3Rvb2xiYXJCdXR0b24tem9vbUluLnBuZyk7Cn0KCi50b29sYmFyQnV0dG9uLnByZXNlbnRhdGlvbk1vZGU6OmJlZm9yZSwKLnNlY29uZGFyeVRvb2xiYXJCdXR0b24ucHJlc2VudGF0aW9uTW9kZTo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3Rvb2xiYXJCdXR0b24tcHJlc2VudGF0aW9uTW9kZS5wbmcpOwp9CgoudG9vbGJhckJ1dHRvbi5wcmludDo6YmVmb3JlLAouc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi5wcmludDo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3Rvb2xiYXJCdXR0b24tcHJpbnQucG5nKTsKfQoKLnRvb2xiYXJCdXR0b24ub3BlbkZpbGU6OmJlZm9yZSwKLnNlY29uZGFyeVRvb2xiYXJCdXR0b24ub3BlbkZpbGU6OmJlZm9yZSB7CiAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLW9wZW5GaWxlLnBuZyk7Cn0KCi50b29sYmFyQnV0dG9uLmRvd25sb2FkOjpiZWZvcmUsCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLmRvd25sb2FkOjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvdG9vbGJhckJ1dHRvbi1kb3dubG9hZC5wbmcpOwp9CgoudG9vbGJhckJ1dHRvbi5ib29rbWFyaywKLnNlY29uZGFyeVRvb2xiYXJCdXR0b24uYm9va21hcmsgewogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgb3V0bGluZTogbm9uZTsKICBwYWRkaW5nLXRvcDogNHB4OwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQouc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi5ib29rbWFyayB7CiAgcGFkZGluZy10b3A6IDVweDsKfQoKLmJvb2ttYXJrW2hyZWY9JyMnXSB7CiAgb3BhY2l0eTogLjU7CiAgcG9pbnRlci1ldmVudHM6IG5vbmU7Cn0KCi50b29sYmFyQnV0dG9uLmJvb2ttYXJrOjpiZWZvcmUsCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLmJvb2ttYXJrOjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvdG9vbGJhckJ1dHRvbi1ib29rbWFyay5wbmcpOwp9Cgojdmlld1RodW1ibmFpbC50b29sYmFyQnV0dG9uOjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvdG9vbGJhckJ1dHRvbi12aWV3VGh1bWJuYWlsLnBuZyk7Cn0KCiN2aWV3T3V0bGluZS50b29sYmFyQnV0dG9uOjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvdG9vbGJhckJ1dHRvbi12aWV3T3V0bGluZS5wbmcpOwp9Cmh0bWxbZGlyPSJydGwiXSAjdmlld091dGxpbmUudG9vbGJhckJ1dHRvbjo6YmVmb3JlIHsKICB0cmFuc2Zvcm06IHNjYWxlWCgtMSk7Cn0KCiN2aWV3QXR0YWNobWVudHMudG9vbGJhckJ1dHRvbjo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3Rvb2xiYXJCdXR0b24tdmlld0F0dGFjaG1lbnRzLnBuZyk7Cn0KCiN2aWV3RmluZC50b29sYmFyQnV0dG9uOjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvdG9vbGJhckJ1dHRvbi1zZWFyY2gucG5nKTsKfQoKLnRvb2xiYXJCdXR0b24ucGRmU2lkZWJhck5vdGlmaWNhdGlvbjo6YWZ0ZXIgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgdG9wOiAxcHg7CiAgLyogQ3JlYXRlIGEgZmlsbGVkIGNpcmNsZSwgd2l0aCBhIGRpYW1ldGVyIG9mIDkgcGl4ZWxzLCB1c2luZyBvbmx5IENTUzogKi8KICBjb250ZW50OiAnJzsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExMiwgMjE5LCA4NSwgMSk7CiAgaGVpZ2h0OiA5cHg7CiAgd2lkdGg6IDlweDsKICBib3JkZXItcmFkaXVzOiA1MCU7Cn0KaHRtbFtkaXI9J2x0ciddIC50b29sYmFyQnV0dG9uLnBkZlNpZGViYXJOb3RpZmljYXRpb246OmFmdGVyIHsKICBsZWZ0OiAxN3B4Owp9Cmh0bWxbZGlyPSdydGwnXSAudG9vbGJhckJ1dHRvbi5wZGZTaWRlYmFyTm90aWZpY2F0aW9uOjphZnRlciB7CiAgcmlnaHQ6IDE3cHg7Cn0KCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgbWFyZ2luOiAwIDAgNHB4IDA7CiAgcGFkZGluZzogM3B4IDAgMXB4IDA7CiAgaGVpZ2h0OiBhdXRvOwogIG1pbi1oZWlnaHQ6IDI1cHg7CiAgd2lkdGg6IGF1dG87CiAgbWluLXdpZHRoOiAxMDAlOwogIHdoaXRlLXNwYWNlOiBub3JtYWw7Cn0KaHRtbFtkaXI9Imx0ciJdIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uIHsKICBwYWRkaW5nLWxlZnQ6IDI0cHg7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQpodG1sW2Rpcj0icnRsIl0gLnNlY29uZGFyeVRvb2xiYXJCdXR0b24gewogIHBhZGRpbmctcmlnaHQ6IDI0cHg7CiAgdGV4dC1hbGlnbjogcmlnaHQ7Cn0KaHRtbFtkaXI9Imx0ciJdIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLmJvb2ttYXJrIHsKICBwYWRkaW5nLWxlZnQ6IDI3cHg7Cn0KaHRtbFtkaXI9InJ0bCJdIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLmJvb2ttYXJrIHsKICBwYWRkaW5nLXJpZ2h0OiAyN3B4Owp9CgpodG1sW2Rpcj0ibHRyIl0gLnNlY29uZGFyeVRvb2xiYXJCdXR0b24gPiBzcGFuIHsKICBwYWRkaW5nLXJpZ2h0OiA0cHg7Cn0KaHRtbFtkaXI9InJ0bCJdIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uID4gc3BhbiB7CiAgcGFkZGluZy1sZWZ0OiA0cHg7Cn0KCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLmZpcnN0UGFnZTo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3NlY29uZGFyeVRvb2xiYXJCdXR0b24tZmlyc3RQYWdlLnBuZyk7Cn0KCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLmxhc3RQYWdlOjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi1sYXN0UGFnZS5wbmcpOwp9Cgouc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi5yb3RhdGVDY3c6OmJlZm9yZSB7CiAgY29udGVudDogdXJsKGltYWdlcy9zZWNvbmRhcnlUb29sYmFyQnV0dG9uLXJvdGF0ZUNjdy5wbmcpOwp9Cgouc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi5yb3RhdGVDdzo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3NlY29uZGFyeVRvb2xiYXJCdXR0b24tcm90YXRlQ3cucG5nKTsKfQoKLnNlY29uZGFyeVRvb2xiYXJCdXR0b24uc2VsZWN0VG9vbDo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3NlY29uZGFyeVRvb2xiYXJCdXR0b24tc2VsZWN0VG9vbC5wbmcpOwp9Cgouc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi5oYW5kVG9vbDo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3NlY29uZGFyeVRvb2xiYXJCdXR0b24taGFuZFRvb2wucG5nKTsKfQoKLnNlY29uZGFyeVRvb2xiYXJCdXR0b24uc2Nyb2xsVmVydGljYWw6OmJlZm9yZSB7CiAgY29udGVudDogdXJsKGltYWdlcy9zZWNvbmRhcnlUb29sYmFyQnV0dG9uLXNjcm9sbFZlcnRpY2FsLnBuZyk7Cn0KCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLnNjcm9sbEhvcml6b250YWw6OmJlZm9yZSB7CiAgY29udGVudDogdXJsKGltYWdlcy9zZWNvbmRhcnlUb29sYmFyQnV0dG9uLXNjcm9sbEhvcml6b250YWwucG5nKTsKfQoKLnNlY29uZGFyeVRvb2xiYXJCdXR0b24uc2Nyb2xsV3JhcHBlZDo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3NlY29uZGFyeVRvb2xiYXJCdXR0b24tc2Nyb2xsV3JhcHBlZC5wbmcpOwp9Cgouc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi5zcHJlYWROb25lOjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi1zcHJlYWROb25lLnBuZyk7Cn0KCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLnNwcmVhZE9kZDo6YmVmb3JlIHsKICBjb250ZW50OiB1cmwoaW1hZ2VzL3NlY29uZGFyeVRvb2xiYXJCdXR0b24tc3ByZWFkT2RkLnBuZyk7Cn0KCi5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLnNwcmVhZEV2ZW46OmJlZm9yZSB7CiAgY29udGVudDogdXJsKGltYWdlcy9zZWNvbmRhcnlUb29sYmFyQnV0dG9uLXNwcmVhZEV2ZW4ucG5nKTsKfQoKLnNlY29uZGFyeVRvb2xiYXJCdXR0b24uZG9jdW1lbnRQcm9wZXJ0aWVzOjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi1kb2N1bWVudFByb3BlcnRpZXMucG5nKTsKfQoKLnZlcnRpY2FsVG9vbGJhclNlcGFyYXRvciB7CiAgZGlzcGxheTogYmxvY2s7CiAgcGFkZGluZzogOHB4IDA7CiAgbWFyZ2luOiA4cHggNHB4OwogIHdpZHRoOiAxcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOwogIGJveC1zaGFkb3c6IDAgMCAwIDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpOwp9Cmh0bWxbZGlyPSdsdHInXSAudmVydGljYWxUb29sYmFyU2VwYXJhdG9yIHsKICBtYXJnaW4tbGVmdDogMnB4Owp9Cmh0bWxbZGlyPSdydGwnXSAudmVydGljYWxUb29sYmFyU2VwYXJhdG9yIHsKICBtYXJnaW4tcmlnaHQ6IDJweDsKfQoKLmhvcml6b250YWxUb29sYmFyU2VwYXJhdG9yIHsKICBkaXNwbGF5OiBibG9jazsKICBtYXJnaW46IDAgMCA0cHggMDsKICBoZWlnaHQ6IDFweDsKICB3aWR0aDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7CiAgYm94LXNoYWRvdzogMCAwIDAgMXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wOCk7Cn0KCi50b29sYmFyRmllbGQgewogIHBhZGRpbmc6IDNweCA2cHg7CiAgbWFyZ2luOiA0cHggMCA0cHggMDsKICBib3JkZXItcmFkaXVzOiAycHg7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA5KTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQocmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSk7CiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsKICBib3JkZXItd2lkdGg6IDFweDsKICBib3JkZXItc3R5bGU6IHNvbGlkOwogIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMyKSByZ2JhKDAsIDAsIDAsIDAuMzgpIHJnYmEoMCwgMCwgMCwgMC40Mik7CiAgYm94LXNoYWRvdzogMCAxcHggMCByZ2JhKDAsIDAsIDAsIDAuMDUpIGluc2V0LAogICAgICAgICAgICAgIDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsKICBjb2xvcjogcmdiYSgyNDIsIDI0MiwgMjQyLCAxKTsKICBmb250LXNpemU6IDEycHg7CiAgbGluZS1oZWlnaHQ6IDE0cHg7CiAgb3V0bGluZS1zdHlsZTogbm9uZTsKfQoKLnRvb2xiYXJGaWVsZFt0eXBlPWNoZWNrYm94XSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogOHB4IDBweDsKfQoKLnRvb2xiYXJGaWVsZC5wYWdlTnVtYmVyIHsKICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogaGlkZXMgdGhlIHNwaW5uZXIgaW4gbW96ICovCiAgbWluLXdpZHRoOiAxNnB4OwogIHRleHQtYWxpZ246IHJpZ2h0OwogIHdpZHRoOiA0MHB4Owp9CgoudG9vbGJhckZpZWxkLnBhZ2VOdW1iZXIudmlzaWJsZVBhZ2VJc0xvYWRpbmcgewogIGJhY2tncm91bmQtaW1hZ2U6IHVybChpbWFnZXMvbG9hZGluZy1zbWFsbC5wbmcpOwogIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMXB4Owp9CgoudG9vbGJhckZpZWxkLnBhZ2VOdW1iZXI6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sCi50b29sYmFyRmllbGQucGFnZU51bWJlcjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7CiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7CiAgICBtYXJnaW46IDA7Cn0KCi50b29sYmFyRmllbGQ6aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xMSk7CiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCkgcmdiYSgwLCAwLCAwLCAwLjQzKSByZ2JhKDAsIDAsIDAsIDAuNDUpOwp9CgoudG9vbGJhckZpZWxkOmZvY3VzIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpOwogIGJvcmRlci1jb2xvcjogcmdiYSg3NywgMTg0LCAyNTUsIDAuOCkgcmdiYSg3NywgMTg0LCAyNTUsIDAuODUpIHJnYmEoNzcsIDE4NCwgMjU1LCAwLjkpOwp9CgoudG9vbGJhckxhYmVsIHsKICBtaW4td2lkdGg6IDE2cHg7CiAgcGFkZGluZzogM3B4IDZweCAzcHggMnB4OwogIG1hcmdpbjogNHB4IDJweCA0cHggMDsKICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDApOwogIGJvcmRlci1yYWRpdXM6IDJweDsKICBjb2xvcjogcmdiYSgyMTcsIDIxNywgMjE3LCAxKTsKICBmb250LXNpemU6IDEycHg7CiAgbGluZS1oZWlnaHQ6IDE0cHg7CiAgdGV4dC1hbGlnbjogbGVmdDsKICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOwogICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTsKICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lOwogIGN1cnNvcjogZGVmYXVsdDsKfQoKI3RodW1ibmFpbFZpZXcgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB3aWR0aDogY2FsYygxMDAlIC0gNjBweCk7CiAgdG9wOiAwOwogIGJvdHRvbTogMDsKICBwYWRkaW5nOiAxMHB4IDMwcHggMDsKICBvdmVyZmxvdzogYXV0bzsKICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7Cn0KCiN0aHVtYm5haWxWaWV3ID4gYTphY3RpdmUsCiN0aHVtYm5haWxWaWV3ID4gYTpmb2N1cyB7CiAgb3V0bGluZTogMDsKfQoKLnRodW1ibmFpbCB7CiAgbWFyZ2luOiAwIDEwcHggNXB4IDEwcHg7Cn0KaHRtbFtkaXI9J2x0ciddIC50aHVtYm5haWwgewogIGZsb2F0OiBsZWZ0Owp9Cmh0bWxbZGlyPSdydGwnXSAudGh1bWJuYWlsIHsKICBmbG9hdDogcmlnaHQ7Cn0KCiN0aHVtYm5haWxWaWV3ID4gYTpsYXN0LW9mLXR5cGUgPiAudGh1bWJuYWlsIHsKICBtYXJnaW4tYm90dG9tOiAxMHB4Owp9CgojdGh1bWJuYWlsVmlldyA+IGE6bGFzdC1vZi10eXBlID4gLnRodW1ibmFpbDpub3QoW2RhdGEtbG9hZGVkXSkgewogIG1hcmdpbi1ib3R0b206IDlweDsKfQoKLnRodW1ibmFpbDpub3QoW2RhdGEtbG9hZGVkXSkgewogIGJvcmRlcjogMXB4IGRhc2hlZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7CiAgbWFyZ2luOiAtMXB4IDlweCA0cHggOXB4Owp9CgoudGh1bWJuYWlsSW1hZ2UgewogIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMCk7CiAgYm94LXNoYWRvdzogMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC41KSwgMCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4zKTsKICBvcGFjaXR5OiAwLjg7CiAgei1pbmRleDogOTk7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTsKICBiYWNrZ3JvdW5kLWNsaXA6IGNvbnRlbnQtYm94Owp9CgoudGh1bWJuYWlsU2VsZWN0aW9uUmluZyB7CiAgYm9yZGVyLXJhZGl1czogMnB4OwogIHBhZGRpbmc6IDdweDsKfQoKYTpmb2N1cyA+IC50aHVtYm5haWwgPiAudGh1bWJuYWlsU2VsZWN0aW9uUmluZyA+IC50aHVtYm5haWxJbWFnZSwKLnRodW1ibmFpbDpob3ZlciA+IC50aHVtYm5haWxTZWxlY3Rpb25SaW5nID4gLnRodW1ibmFpbEltYWdlIHsKICBvcGFjaXR5OiAuOTsKfQoKYTpmb2N1cyA+IC50aHVtYm5haWwgPiAudGh1bWJuYWlsU2VsZWN0aW9uUmluZywKLnRodW1ibmFpbDpob3ZlciA+IC50aHVtYm5haWxTZWxlY3Rpb25SaW5nIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApKTsKICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OwogIGJveC1zaGFkb3c6IDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KSBpbnNldCwKICAgICAgICAgICAgICAwIDAgMXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSBpbnNldCwKICAgICAgICAgICAgICAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTsKICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpOwp9CgoudGh1bWJuYWlsLnNlbGVjdGVkID4gLnRodW1ibmFpbFNlbGVjdGlvblJpbmcgPiAudGh1bWJuYWlsSW1hZ2UgewogIGJveC1zaGFkb3c6IDAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuNSk7CiAgb3BhY2l0eTogMTsKfQoKLnRodW1ibmFpbC5zZWxlY3RlZCA+IC50aHVtYm5haWxTZWxlY3Rpb25SaW5nIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSksIHJnYmEoMjU1LCAyNTUsIDI1NSwgMCkpOwogIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7CiAgYm94LXNoYWRvdzogMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpIGluc2V0LAogICAgICAgICAgICAgIDAgMCAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpIGluc2V0LAogICAgICAgICAgICAgIDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwLjIpOwogIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsMSk7Cn0KCiNvdXRsaW5lVmlldywKI2F0dGFjaG1lbnRzVmlldyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdpZHRoOiBjYWxjKDEwMCUgLSA4cHgpOwogIHRvcDogMDsKICBib3R0b206IDA7CiAgb3ZlcmZsb3c6IGF1dG87CiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoOwogIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsKICAgICAgLW1zLXVzZXItc2VsZWN0OiBub25lOwogICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7Cn0KCiNvdXRsaW5lVmlldyB7CiAgcGFkZGluZzogNHB4IDRweCAwOwp9CiNhdHRhY2htZW50c1ZpZXcgewogIHBhZGRpbmc6IDNweCA0cHggMDsKfQoKaHRtbFtkaXI9J2x0ciddIC5vdXRsaW5lV2l0aERlZXBOZXN0aW5nID4gLm91dGxpbmVJdGVtLApodG1sW2Rpcj0nbHRyJ10gLm91dGxpbmVJdGVtID4gLm91dGxpbmVJdGVtcyB7CiAgbWFyZ2luLWxlZnQ6IDIwcHg7Cn0KCmh0bWxbZGlyPSdydGwnXSAub3V0bGluZVdpdGhEZWVwTmVzdGluZyA+IC5vdXRsaW5lSXRlbSwKaHRtbFtkaXI9J3J0bCddIC5vdXRsaW5lSXRlbSA+IC5vdXRsaW5lSXRlbXMgewogIG1hcmdpbi1yaWdodDogMjBweDsKfQoKLm91dGxpbmVJdGVtID4gYSwKLmF0dGFjaG1lbnRzSXRlbSA+IGJ1dHRvbiB7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtaW4td2lkdGg6IDk1JTsKICBtaW4td2lkdGg6IGNhbGMoMTAwJSAtIDRweCk7IC8qIFN1YnRyYWN0IHRoZSByaWdodCBwYWRkaW5nIChsZWZ0LCBpbiBSVEwgbW9kZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mIHRoZSBjb250YWluZXIuICovCiAgaGVpZ2h0OiBhdXRvOwogIG1hcmdpbi1ib3R0b206IDFweDsKICBib3JkZXItcmFkaXVzOiAycHg7CiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTsKICBmb250LXNpemU6IDEzcHg7CiAgbGluZS1oZWlnaHQ6IDE1cHg7CiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsKICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lOwogICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTsKICB3aGl0ZS1zcGFjZTogbm9ybWFsOwp9CgouYXR0YWNobWVudHNJdGVtID4gYnV0dG9uIHsKICBib3JkZXI6IDAgbm9uZTsKICBiYWNrZ3JvdW5kOiBub25lOwogIGN1cnNvcjogcG9pbnRlcjsKICB3aWR0aDogMTAwJTsKfQoKaHRtbFtkaXI9J2x0ciddIC5vdXRsaW5lSXRlbSA+IGEgewogIHBhZGRpbmc6IDJweCAwIDVweCA0cHg7Cn0KaHRtbFtkaXI9J2x0ciddIC5hdHRhY2htZW50c0l0ZW0gPiBidXR0b24gewogIHBhZGRpbmc6IDJweCAwIDNweCA3cHg7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQoKaHRtbFtkaXI9J3J0bCddIC5vdXRsaW5lSXRlbSA+IGEgewogIHBhZGRpbmc6IDJweCA0cHggNXB4IDA7Cn0KaHRtbFtkaXI9J3J0bCddIC5hdHRhY2htZW50c0l0ZW0gPiBidXR0b24gewogIHBhZGRpbmc6IDJweCA3cHggM3B4IDA7CiAgdGV4dC1hbGlnbjogcmlnaHQ7Cn0KCi5vdXRsaW5lSXRlbVRvZ2dsZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBoZWlnaHQ6IDA7CiAgd2lkdGg6IDA7CiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTsKfQoub3V0bGluZUl0ZW1Ub2dnbGVyOjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvdHJlZWl0ZW0tZXhwYW5kZWQucG5nKTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgcG9zaXRpb246IGFic29sdXRlOwp9Ci5vdXRsaW5lSXRlbVRvZ2dsZXIub3V0bGluZUl0ZW1zSGlkZGVuOjpiZWZvcmUgewogIGNvbnRlbnQ6IHVybChpbWFnZXMvdHJlZWl0ZW0tY29sbGFwc2VkLnBuZyk7Cn0KaHRtbFtkaXI9J3J0bCddIC5vdXRsaW5lSXRlbVRvZ2dsZXIub3V0bGluZUl0ZW1zSGlkZGVuOjpiZWZvcmUgewogIHRyYW5zZm9ybTogc2NhbGVYKC0xKTsKfQoub3V0bGluZUl0ZW1Ub2dnbGVyLm91dGxpbmVJdGVtc0hpZGRlbiB+IC5vdXRsaW5lSXRlbXMgewogIGRpc3BsYXk6IG5vbmU7Cn0KaHRtbFtkaXI9J2x0ciddIC5vdXRsaW5lSXRlbVRvZ2dsZXIgewogIGZsb2F0OiBsZWZ0Owp9Cmh0bWxbZGlyPSdydGwnXSAub3V0bGluZUl0ZW1Ub2dnbGVyIHsKICBmbG9hdDogcmlnaHQ7Cn0KaHRtbFtkaXI9J2x0ciddIC5vdXRsaW5lSXRlbVRvZ2dsZXI6OmJlZm9yZSB7CiAgcmlnaHQ6IDRweDsKfQpodG1sW2Rpcj0ncnRsJ10gLm91dGxpbmVJdGVtVG9nZ2xlcjo6YmVmb3JlIHsKICBsZWZ0OiA0cHg7Cn0KCi5vdXRsaW5lSXRlbVRvZ2dsZXI6aG92ZXIsCi5vdXRsaW5lSXRlbVRvZ2dsZXI6aG92ZXIgKyBhLAoub3V0bGluZUl0ZW1Ub2dnbGVyOmhvdmVyIH4gLm91dGxpbmVJdGVtcywKLm91dGxpbmVJdGVtID4gYTpob3ZlciwKLmF0dGFjaG1lbnRzSXRlbSA+IGJ1dHRvbjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyKTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQocmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSk7CiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsKICBib3gtc2hhZG93OiAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSkgaW5zZXQsCiAgICAgICAgICAgICAgMCAwIDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgaW5zZXQsCiAgICAgICAgICAgICAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMik7CiAgYm9yZGVyLXJhZGl1czogMnB4OwogIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7Cn0KCi5vdXRsaW5lSXRlbS5zZWxlY3RlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA4KTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQocmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSk7CiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsKICBib3gtc2hhZG93OiAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSkgaW5zZXQsCiAgICAgICAgICAgICAgMCAwIDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSkgaW5zZXQsCiAgICAgICAgICAgICAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMik7CiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7Cn0KCi5ub1Jlc3VsdHMgewogIGZvbnQtc2l6ZTogMTJweDsKICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpOwogIGZvbnQtc3R5bGU6IGl0YWxpYzsKICBjdXJzb3I6IGRlZmF1bHQ7Cn0KCi8qIFRPRE86IGZpbGUgRkYgYnVnIHRvIHN1cHBvcnQgOjotbW96LXNlbGVjdGlvbjp3aW5kb3ctaW5hY3RpdmUKICAgc28gd2UgY2FuIG92ZXJyaWRlIHRoZSBvcGFxdWUgZ3JleSBiYWNrZ3JvdW5kIHdoZW4gdGhlIHdpbmRvdyBpcyBpbmFjdGl2ZTsKICAgc2VlIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTcwNjIwOSAqLwo6Oi1tb3otc2VsZWN0aW9uIHsKICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDI1NSwgMC4zKTsKfQo6OnNlbGVjdGlvbiB7CiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAyNTUsIDAuMyk7Cn0KCiNlcnJvcldyYXBwZXIgewogIGJhY2tncm91bmQ6IG5vbmUgcmVwZWF0IHNjcm9sbCAwIDAgcmdiYSgyNTUsIDg1LCA4NSwgMSk7CiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7CiAgbGVmdDogMDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgcmlnaHQ6IDA7CiAgei1pbmRleDogMTAwMDsKICBwYWRkaW5nOiAzcHg7CiAgZm9udC1zaXplOiAwLjhlbTsKfQoubG9hZGluZ0luUHJvZ3Jlc3MgI2Vycm9yV3JhcHBlciB7CiAgdG9wOiAzN3B4Owp9CgojZXJyb3JNZXNzYWdlTGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNlcnJvck1lc3NhZ2VSaWdodCB7CiAgZmxvYXQ6IHJpZ2h0Owp9CgojZXJyb3JNb3JlSW5mbyB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTsKICBjb2xvcjogcmdiYSgwLCAwLCAwLCAxKTsKICBwYWRkaW5nOiAzcHg7CiAgbWFyZ2luOiAzcHg7CiAgd2lkdGg6IDk4JTsKfQoKLm92ZXJsYXlCdXR0b24gewogIHdpZHRoOiBhdXRvOwogIG1hcmdpbjogM3B4IDRweCAycHggNHB4ICFpbXBvcnRhbnQ7CiAgcGFkZGluZzogMnB4IDZweCAzcHggNnB4Owp9Cgojb3ZlcmxheUNvbnRhaW5lciB7CiAgZGlzcGxheTogdGFibGU7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7CiAgei1pbmRleDogNDAwMDA7Cn0KI292ZXJsYXlDb250YWluZXIgPiAqIHsKICBvdmVyZmxvdzogYXV0bzsKICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7Cn0KCiNvdmVybGF5Q29udGFpbmVyID4gLmNvbnRhaW5lciB7CiAgZGlzcGxheTogdGFibGUtY2VsbDsKICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKI292ZXJsYXlDb250YWluZXIgPiAuY29udGFpbmVyID4gLmRpYWxvZyB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHBhZGRpbmc6IDE1cHg7CiAgYm9yZGVyLXNwYWNpbmc6IDRweDsKICBjb2xvcjogcmdiYSgyMTcsIDIxNywgMjE3LCAxKTsKICBmb250LXNpemU6IDEycHg7CiAgbGluZS1oZWlnaHQ6IDE0cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg3MSwgNzEsIDcxLCAxKTsgLyogZmFsbGJhY2sgKi8KICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1hZ2VzL3RleHR1cmUucG5nKSwKICAgICAgICAgICAgICAgICAgICBsaW5lYXItZ3JhZGllbnQocmdiYSg4MiwgODIsIDgyLDAuOTkpLCByZ2JhKDY5LCA2OSwgNjksIDAuOTUpKTsKICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuNSk7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGJveC1zaGFkb3c6IDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMyk7Cn0KCi5kaWFsb2cgPiAucm93IHsKICBkaXNwbGF5OiB0YWJsZS1yb3c7Cn0KCi5kaWFsb2cgPiAucm93ID4gKiB7CiAgZGlzcGxheTogdGFibGUtY2VsbDsKfQoKLmRpYWxvZyAudG9vbGJhckZpZWxkIHsKICBtYXJnaW46IDVweCAwOwp9CgouZGlhbG9nIC5zZXBhcmF0b3IgewogIGRpc3BsYXk6IGJsb2NrOwogIG1hcmdpbjogNHB4IDAgNHB4IDA7CiAgaGVpZ2h0OiAxcHg7CiAgd2lkdGg6IDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOwogIGJveC1zaGFkb3c6IDAgMCAwIDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpOwp9CgouZGlhbG9nIC5idXR0b25Sb3cgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwp9CgouZGlhbG9nIDpsaW5rIHsKICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTsKfQoKI3Bhc3N3b3JkT3ZlcmxheSA+IC5kaWFsb2cgewogIHRleHQtYWxpZ246IGNlbnRlcjsKfQojcGFzc3dvcmRPdmVybGF5IC50b29sYmFyRmllbGQgewogIHdpZHRoOiAyMDBweDsKfQoKI2RvY3VtZW50UHJvcGVydGllc092ZXJsYXkgPiAuZGlhbG9nIHsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9CiNkb2N1bWVudFByb3BlcnRpZXNPdmVybGF5IC5yb3cgPiAqIHsKICBtaW4td2lkdGg6IDEwMHB4Owp9Cmh0bWxbZGlyPSdsdHInXSAjZG9jdW1lbnRQcm9wZXJ0aWVzT3ZlcmxheSAucm93ID4gKiB7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQpodG1sW2Rpcj0ncnRsJ10gI2RvY3VtZW50UHJvcGVydGllc092ZXJsYXkgLnJvdyA+ICogewogIHRleHQtYWxpZ246IHJpZ2h0Owp9CiNkb2N1bWVudFByb3BlcnRpZXNPdmVybGF5IC5yb3cgPiBzcGFuIHsKICB3aWR0aDogMTI1cHg7CiAgd29yZC13cmFwOiBicmVhay13b3JkOwp9CiNkb2N1bWVudFByb3BlcnRpZXNPdmVybGF5IC5yb3cgPiBwIHsKICBtYXgtd2lkdGg6IDIyNXB4OwogIHdvcmQtd3JhcDogYnJlYWstd29yZDsKfQojZG9jdW1lbnRQcm9wZXJ0aWVzT3ZlcmxheSAuYnV0dG9uUm93IHsKICBtYXJnaW4tdG9wOiAxMHB4Owp9CgouY2xlYXJCb3RoIHsKICBjbGVhcjogYm90aDsKfQoKLmZpbGVJbnB1dCB7CiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTsKICBjb2xvcjogcmdiYSgwLCAwLCAwLCAxKTsKICBtYXJnaW4tdG9wOiA1cHg7CiAgdmlzaWJpbGl0eTogaGlkZGVuOwogIHBvc2l0aW9uOiBmaXhlZDsKICByaWdodDogMDsKICB0b3A6IDA7Cn0KCiNQREZCdWcgewogIGJhY2tncm91bmQ6IG5vbmUgcmVwZWF0IHNjcm9sbCAwIDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTsKICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDEwMiwgMTAyLCAxMDIsIDEpOwogIHBvc2l0aW9uOiBmaXhlZDsKICB0b3A6IDMycHg7CiAgcmlnaHQ6IDA7CiAgYm90dG9tOiAwOwogIGZvbnQtc2l6ZTogMTBweDsKICBwYWRkaW5nOiAwOwogIHdpZHRoOiAzMDBweDsKfQojUERGQnVnIC5jb250cm9scyB7CiAgYmFja2dyb3VuZDogcmdiYSgyMzgsIDIzOCwgMjM4LCAxKTsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxMDIsIDEwMiwgMTAyLCAxKTsKICBwYWRkaW5nOiAzcHg7Cn0KI1BERkJ1ZyAucGFuZWxzIHsKICBib3R0b206IDA7CiAgbGVmdDogMDsKICBvdmVyZmxvdzogYXV0bzsKICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHJpZ2h0OiAwOwogIHRvcDogMjdweDsKfQojUERGQnVnIC5wYW5lbHMgPiBkaXYgewogIHBhZGRpbmc6IDVweDsKfQojUERGQnVnIGJ1dHRvbi5hY3RpdmUgewogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Ci5kZWJ1Z2dlclNob3dUZXh0IHsKICBiYWNrZ3JvdW5kOiBub25lIHJlcGVhdCBzY3JvbGwgMCAwIHJnYmEoMjU1LCAyNTUsIDAsIDEpOwogIGNvbG9yOiByZ2JhKDAsIDAsIDI1NSwgMSk7Cn0KLmRlYnVnZ2VySGlkZVRleHQ6aG92ZXIgewogIGJhY2tncm91bmQ6IG5vbmUgcmVwZWF0IHNjcm9sbCAwIDAgcmdiYSgyNTUsIDI1NSwgMCwgMSk7Cn0KI1BERkJ1ZyAuc3RhdHMgewogIGZvbnQtZmFtaWx5OiBjb3VyaWVyOwogIGZvbnQtc2l6ZTogMTBweDsKICB3aGl0ZS1zcGFjZTogcHJlOwp9CiNQREZCdWcgLnN0YXRzIC50aXRsZSB7CiAgICBmb250LXdlaWdodDogYm9sZDsKfQojUERGQnVnIHRhYmxlIHsKICBmb250LXNpemU6IDEwcHg7Cn0KCiN2aWV3ZXIudGV4dExheWVyLXZpc2libGUgLnRleHRMYXllciB7CiAgb3BhY2l0eTogMS4wOwp9Cgojdmlld2VyLnRleHRMYXllci12aXNpYmxlIC5jYW52YXNXcmFwcGVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyOCwgMjU1LCAxMjgsIDEpOwp9Cgojdmlld2VyLnRleHRMYXllci12aXNpYmxlIC5jYW52YXNXcmFwcGVyIGNhbnZhcyB7CiAgbWl4LWJsZW5kLW1vZGU6IHNjcmVlbjsKfQoKI3ZpZXdlci50ZXh0TGF5ZXItdmlzaWJsZSAudGV4dExheWVyID4gc3BhbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMCwgMC4xKTsKICBjb2xvcjogcmdiYSgwLCAwLCAwLCAxKTsKICBib3JkZXI6IHNvbGlkIDFweCByZ2JhKDI1NSwgMCwgMCwgMC41KTsKICBib3gtc2l6aW5nOiBib3JkZXItYm94Owp9Cgojdmlld2VyLnRleHRMYXllci1ob3ZlciAudGV4dExheWVyID4gc3Bhbjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTsKICBjb2xvcjogcmdiYSgwLCAwLCAwLCAxKTsKfQoKI3ZpZXdlci50ZXh0TGF5ZXItc2hhZG93IC50ZXh0TGF5ZXIgPiBzcGFuIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7CiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMSk7Cn0KCi5ncmFiLXRvLXBhbi1ncmFiIHsKICBjdXJzb3I6IHVybCgiaW1hZ2VzL2dyYWIuY3VyIiksIG1vdmUgIWltcG9ydGFudDsKICBjdXJzb3I6IC13ZWJraXQtZ3JhYiAhaW1wb3J0YW50OwogIGN1cnNvcjogZ3JhYiAhaW1wb3J0YW50Owp9Ci5ncmFiLXRvLXBhbi1ncmFiICo6bm90KGlucHV0KTpub3QodGV4dGFyZWEpOm5vdChidXR0b24pOm5vdChzZWxlY3QpOm5vdCg6bGluaykgewogIGN1cnNvcjogaW5oZXJpdCAhaW1wb3J0YW50Owp9Ci5ncmFiLXRvLXBhbi1ncmFiOmFjdGl2ZSwKLmdyYWItdG8tcGFuLWdyYWJiaW5nIHsKICBjdXJzb3I6IHVybCgiaW1hZ2VzL2dyYWJiaW5nLmN1ciIpLCBtb3ZlICFpbXBvcnRhbnQ7CiAgY3Vyc29yOiAtd2Via2l0LWdyYWJiaW5nICFpbXBvcnRhbnQ7CiAgY3Vyc29yOiBncmFiYmluZyAhaW1wb3J0YW50OwogIHBvc2l0aW9uOiBmaXhlZDsKICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDApOwogIGRpc3BsYXk6IGJsb2NrOwogIHRvcDogMDsKICBsZWZ0OiAwOwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICBvdmVyZmxvdzogaGlkZGVuOwogIHotaW5kZXg6IDUwMDAwOyAvKiBzaG91bGQgYmUgaGlnaGVyIHRoYW4gYW55dGhpbmcgZWxzZSBpbiBQREYuanMhICovCn0KCkBwYWdlIHsKICBtYXJnaW46IDA7Cn0KCiNwcmludENvbnRhaW5lciB7CiAgZGlzcGxheTogbm9uZTsKfQoKQG1lZGlhIHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMS4xKSwgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246IDEuMWRwcHgpIHsKICAvKiBSdWxlcyBmb3IgUmV0aW5hIHNjcmVlbnMgKi8KICAudG9vbGJhckJ1dHRvbjo6YmVmb3JlIHsKICAgIHRyYW5zZm9ybTogc2NhbGUoMC41KTsKICAgIHRvcDogLTVweDsKICB9CgogIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uOjpiZWZvcmUgewogICAgdHJhbnNmb3JtOiBzY2FsZSgwLjUpOwogICAgdG9wOiAtNHB4OwogIH0KCiAgaHRtbFtkaXI9J2x0ciddIC50b29sYmFyQnV0dG9uOjpiZWZvcmUsCiAgaHRtbFtkaXI9J3J0bCddIC50b29sYmFyQnV0dG9uOjpiZWZvcmUgewogICAgbGVmdDogLTFweDsKICB9CgogIGh0bWxbZGlyPSdsdHInXSAuc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbjo6YmVmb3JlIHsKICAgIGxlZnQ6IC0ycHg7CiAgfQogIGh0bWxbZGlyPSdydGwnXSAuc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbjo6YmVmb3JlIHsKICAgIGxlZnQ6IDE4NnB4OwogIH0KCiAgLnRvb2xiYXJGaWVsZC5wYWdlTnVtYmVyLnZpc2libGVQYWdlSXNMb2FkaW5nLAogICNmaW5kSW5wdXRbZGF0YS1zdGF0dXM9InBlbmRpbmciXSB7CiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1hZ2VzL2xvYWRpbmctc21hbGxAMngucG5nKTsKICAgIGJhY2tncm91bmQtc2l6ZTogMTZweCAxN3B4OwogIH0KCiAgLmRyb3Bkb3duVG9vbGJhckJ1dHRvbjo6YWZ0ZXIgewogICAgdHJhbnNmb3JtOiBzY2FsZSgwLjUpOwogICAgdG9wOiAtNXB4OwogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLW1lbnVBcnJvd3NAMngucG5nKTsKICB9CiAgaHRtbFtkaXI9J2x0ciddIC5kcm9wZG93blRvb2xiYXJCdXR0b246OmFmdGVyIHsKICAgIHJpZ2h0OiA0cHg7CiAgfQogIGh0bWxbZGlyPSdydGwnXSAuZHJvcGRvd25Ub29sYmFyQnV0dG9uOjphZnRlciB7CiAgICBsZWZ0OiA0cHg7CiAgfQoKICAudG9vbGJhckJ1dHRvbiNzaWRlYmFyVG9nZ2xlOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXNpZGViYXJUb2dnbGVAMngucG5nKTsKICB9CiAgaHRtbFtkaXI9J3J0bCddIC50b29sYmFyQnV0dG9uI3NpZGViYXJUb2dnbGU6OmJlZm9yZSB7CiAgICB0cmFuc2Zvcm06IHNjYWxlKC0wLjUsIDAuNSk7CiAgfQoKICAudG9vbGJhckJ1dHRvbiNzZWNvbmRhcnlUb29sYmFyVG9nZ2xlOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXNlY29uZGFyeVRvb2xiYXJUb2dnbGVAMngucG5nKTsKICB9CiAgaHRtbFtkaXI9J3J0bCddIC50b29sYmFyQnV0dG9uI3NlY29uZGFyeVRvb2xiYXJUb2dnbGU6OmJlZm9yZSB7CiAgICB0cmFuc2Zvcm06IHNjYWxlKC0wLjUsIDAuNSk7CiAgfQoKICAudG9vbGJhckJ1dHRvbi5maW5kUHJldmlvdXM6OmJlZm9yZSB7CiAgICBjb250ZW50OiB1cmwoaW1hZ2VzL2ZpbmRiYXJCdXR0b24tcHJldmlvdXNAMngucG5nKTsKICB9CiAgaHRtbFtkaXI9J3J0bCddIC50b29sYmFyQnV0dG9uLmZpbmRQcmV2aW91czo6YmVmb3JlIHsKICAgIHRyYW5zZm9ybTogc2NhbGUoLTAuNSwgMC41KTsKICB9CgogIC50b29sYmFyQnV0dG9uLmZpbmROZXh0OjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy9maW5kYmFyQnV0dG9uLW5leHRAMngucG5nKTsKICB9CiAgaHRtbFtkaXI9J3J0bCddIC50b29sYmFyQnV0dG9uLmZpbmROZXh0OjpiZWZvcmUgewogICAgdHJhbnNmb3JtOiBzY2FsZSgtMC41LCAwLjUpOwogIH0KCiAgLnRvb2xiYXJCdXR0b24ucGFnZVVwOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXBhZ2VVcEAyeC5wbmcpOwogIH0KICBodG1sW2Rpcj0ncnRsJ10gLnRvb2xiYXJCdXR0b24ucGFnZVVwOjpiZWZvcmUgewogICAgdHJhbnNmb3JtOiBzY2FsZSgtMC41LCAwLjUpOwogIH0KCiAgLnRvb2xiYXJCdXR0b24ucGFnZURvd246OmJlZm9yZSB7CiAgICBjb250ZW50OiB1cmwoaW1hZ2VzL3Rvb2xiYXJCdXR0b24tcGFnZURvd25AMngucG5nKTsKICB9CiAgaHRtbFtkaXI9J3J0bCddIC50b29sYmFyQnV0dG9uLnBhZ2VEb3duOjpiZWZvcmUgewogICAgdHJhbnNmb3JtOiBzY2FsZSgtMC41LCAwLjUpOwogIH0KCiAgLnRvb2xiYXJCdXR0b24uem9vbUluOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXpvb21JbkAyeC5wbmcpOwogIH0KCiAgLnRvb2xiYXJCdXR0b24uem9vbU91dDo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6IHVybChpbWFnZXMvdG9vbGJhckJ1dHRvbi16b29tT3V0QDJ4LnBuZyk7CiAgfQoKICAudG9vbGJhckJ1dHRvbi5wcmVzZW50YXRpb25Nb2RlOjpiZWZvcmUsCiAgLnNlY29uZGFyeVRvb2xiYXJCdXR0b24ucHJlc2VudGF0aW9uTW9kZTo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6IHVybChpbWFnZXMvdG9vbGJhckJ1dHRvbi1wcmVzZW50YXRpb25Nb2RlQDJ4LnBuZyk7CiAgfQoKICAudG9vbGJhckJ1dHRvbi5wcmludDo6YmVmb3JlLAogIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLnByaW50OjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXByaW50QDJ4LnBuZyk7CiAgfQoKICAudG9vbGJhckJ1dHRvbi5vcGVuRmlsZTo6YmVmb3JlLAogIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLm9wZW5GaWxlOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLW9wZW5GaWxlQDJ4LnBuZyk7CiAgfQoKICAudG9vbGJhckJ1dHRvbi5kb3dubG9hZDo6YmVmb3JlLAogIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLmRvd25sb2FkOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLWRvd25sb2FkQDJ4LnBuZyk7CiAgfQoKICAudG9vbGJhckJ1dHRvbi5ib29rbWFyazo6YmVmb3JlLAogIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLmJvb2ttYXJrOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLWJvb2ttYXJrQDJ4LnBuZyk7CiAgfQoKICAjdmlld1RodW1ibmFpbC50b29sYmFyQnV0dG9uOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXZpZXdUaHVtYm5haWxAMngucG5nKTsKICB9CgogICN2aWV3T3V0bGluZS50b29sYmFyQnV0dG9uOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXZpZXdPdXRsaW5lQDJ4LnBuZyk7CiAgfQogIGh0bWxbZGlyPSJydGwiXSAjdmlld091dGxpbmUudG9vbGJhckJ1dHRvbjo6YmVmb3JlIHsKICAgIHRyYW5zZm9ybTogc2NhbGUoLTAuNSwgMC41KTsKICB9CgogICN2aWV3QXR0YWNobWVudHMudG9vbGJhckJ1dHRvbjo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6IHVybChpbWFnZXMvdG9vbGJhckJ1dHRvbi12aWV3QXR0YWNobWVudHNAMngucG5nKTsKICB9CgogICN2aWV3RmluZC50b29sYmFyQnV0dG9uOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy90b29sYmFyQnV0dG9uLXNlYXJjaEAyeC5wbmcpOwogIH0KCiAgLnNlY29uZGFyeVRvb2xiYXJCdXR0b24uZmlyc3RQYWdlOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy9zZWNvbmRhcnlUb29sYmFyQnV0dG9uLWZpcnN0UGFnZUAyeC5wbmcpOwogIH0KCiAgLnNlY29uZGFyeVRvb2xiYXJCdXR0b24ubGFzdFBhZ2U6OmJlZm9yZSB7CiAgICBjb250ZW50OiB1cmwoaW1hZ2VzL3NlY29uZGFyeVRvb2xiYXJCdXR0b24tbGFzdFBhZ2VAMngucG5nKTsKICB9CgogIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLnJvdGF0ZUNjdzo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6IHVybChpbWFnZXMvc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi1yb3RhdGVDY3dAMngucG5nKTsKICB9CgogIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLnJvdGF0ZUN3OjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy9zZWNvbmRhcnlUb29sYmFyQnV0dG9uLXJvdGF0ZUN3QDJ4LnBuZyk7CiAgfQoKICAuc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi5zZWxlY3RUb29sOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy9zZWNvbmRhcnlUb29sYmFyQnV0dG9uLXNlbGVjdFRvb2xAMngucG5nKTsKICB9CgogIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLmhhbmRUb29sOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy9zZWNvbmRhcnlUb29sYmFyQnV0dG9uLWhhbmRUb29sQDJ4LnBuZyk7CiAgfQoKICAuc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi5zY3JvbGxWZXJ0aWNhbDo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6IHVybChpbWFnZXMvc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi1zY3JvbGxWZXJ0aWNhbEAyeC5wbmcpOwogIH0KCiAgLnNlY29uZGFyeVRvb2xiYXJCdXR0b24uc2Nyb2xsSG9yaXpvbnRhbDo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6IHVybChpbWFnZXMvc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi1zY3JvbGxIb3Jpem9udGFsQDJ4LnBuZyk7CiAgfQoKICAuc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi5zY3JvbGxXcmFwcGVkOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy9zZWNvbmRhcnlUb29sYmFyQnV0dG9uLXNjcm9sbFdyYXBwZWRAMngucG5nKTsKICB9CgogIC5zZWNvbmRhcnlUb29sYmFyQnV0dG9uLnNwcmVhZE5vbmU6OmJlZm9yZSB7CiAgICBjb250ZW50OiB1cmwoaW1hZ2VzL3NlY29uZGFyeVRvb2xiYXJCdXR0b24tc3ByZWFkTm9uZUAyeC5wbmcpOwogIH0KCiAgLnNlY29uZGFyeVRvb2xiYXJCdXR0b24uc3ByZWFkT2RkOjpiZWZvcmUgewogICAgY29udGVudDogdXJsKGltYWdlcy9zZWNvbmRhcnlUb29sYmFyQnV0dG9uLXNwcmVhZE9kZEAyeC5wbmcpOwogIH0KCiAgLnNlY29uZGFyeVRvb2xiYXJCdXR0b24uc3ByZWFkRXZlbjo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6IHVybChpbWFnZXMvc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi1zcHJlYWRFdmVuQDJ4LnBuZyk7CiAgfQoKICAuc2Vjb25kYXJ5VG9vbGJhckJ1dHRvbi5kb2N1bWVudFByb3BlcnRpZXM6OmJlZm9yZSB7CiAgICBjb250ZW50OiB1cmwoaW1hZ2VzL3NlY29uZGFyeVRvb2xiYXJCdXR0b24tZG9jdW1lbnRQcm9wZXJ0aWVzQDJ4LnBuZyk7CiAgfQoKICAub3V0bGluZUl0ZW1Ub2dnbGVyOjpiZWZvcmUgewogICAgdHJhbnNmb3JtOiBzY2FsZSgwLjUpOwogICAgdG9wOiAtMXB4OwogICAgY29udGVudDogdXJsKGltYWdlcy90cmVlaXRlbS1leHBhbmRlZEAyeC5wbmcpOwogIH0KICAub3V0bGluZUl0ZW1Ub2dnbGVyLm91dGxpbmVJdGVtc0hpZGRlbjo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6IHVybChpbWFnZXMvdHJlZWl0ZW0tY29sbGFwc2VkQDJ4LnBuZyk7CiAgfQogIGh0bWxbZGlyPSdydGwnXSAub3V0bGluZUl0ZW1Ub2dnbGVyLm91dGxpbmVJdGVtc0hpZGRlbjo6YmVmb3JlIHsKICAgIHRyYW5zZm9ybTogc2NhbGUoLTAuNSwgMC41KTsKICB9CiAgaHRtbFtkaXI9J2x0ciddIC5vdXRsaW5lSXRlbVRvZ2dsZXI6OmJlZm9yZSB7CiAgICByaWdodDogMDsKICB9CiAgaHRtbFtkaXI9J3J0bCddIC5vdXRsaW5lSXRlbVRvZ2dsZXI6OmJlZm9yZSB7CiAgICBsZWZ0OiAwOwogIH0KfQoKQG1lZGlhIHByaW50IHsKICAvKiBHZW5lcmFsIHJ1bGVzIGZvciBwcmludGluZy4gKi8KICBib2R5IHsKICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMCkgbm9uZTsKICB9CgogIC8qIFJ1bGVzIGZvciBicm93c2VycyB0aGF0IGRvbid0IHN1cHBvcnQgbW96UHJpbnRDYWxsYmFjay4gKi8KICAjc2lkZWJhckNvbnRhaW5lciwgI3NlY29uZGFyeVRvb2xiYXIsIC50b29sYmFyLCAjbG9hZGluZ0JveCwgI2Vycm9yV3JhcHBlciwgLnRleHRMYXllciB7CiAgICBkaXNwbGF5OiBub25lOwogIH0KICAjdmlld2VyQ29udGFpbmVyIHsKICAgIG92ZXJmbG93OiB2aXNpYmxlOwogIH0KCiAgI21haW5Db250YWluZXIsICN2aWV3ZXJDb250YWluZXIsIC5wYWdlLCAucGFnZSBjYW52YXMgewogICAgcG9zaXRpb246IHN0YXRpYzsKICAgIHBhZGRpbmc6IDA7CiAgICBtYXJnaW46IDA7CiAgfQoKICAucGFnZSB7CiAgICBmbG9hdDogbGVmdDsKICAgIGRpc3BsYXk6IG5vbmU7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3gtc2hhZG93OiBub25lOwogICAgYmFja2dyb3VuZC1jbGlwOiBjb250ZW50LWJveDsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7CiAgfQoKICAucGFnZVtkYXRhLWxvYWRlZF0gewogICAgZGlzcGxheTogYmxvY2s7CiAgfQoKICAuZmlsZUlucHV0IHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgfQoKICAvKiBSdWxlcyBmb3IgYnJvd3NlcnMgdGhhdCBzdXBwb3J0IFBERi5qcyBwcmludGluZyAqLwogIGJvZHlbZGF0YS1wZGZqc3ByaW50aW5nXSAjb3V0ZXJDb250YWluZXIgewogICAgZGlzcGxheTogbm9uZTsKICB9CiAgYm9keVtkYXRhLXBkZmpzcHJpbnRpbmddICNwcmludENvbnRhaW5lciB7CiAgICBkaXNwbGF5OiBibG9jazsKICB9CiAgI3ByaW50Q29udGFpbmVyIHsKICAgIGhlaWdodDogMTAwJTsKICB9CiAgLyogd3JhcHBlciBhcm91bmQgKHNjYWxlZCkgcHJpbnQgY2FudmFzIGVsZW1lbnRzICovCiAgI3ByaW50Q29udGFpbmVyID4gZGl2IHsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHRvcDogMDsKICAgIGxlZnQ6IDA7CiAgICB3aWR0aDogMXB4OwogICAgaGVpZ2h0OiAxcHg7CiAgICBvdmVyZmxvdzogdmlzaWJsZTsKICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGFsd2F5czsKICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsKICB9CiAgI3ByaW50Q29udGFpbmVyIGNhbnZhcywKICAjcHJpbnRDb250YWluZXIgaW1nIHsKICAgIGRpc3BsYXk6IGJsb2NrOwogIH0KfQoKLnZpc2libGVMYXJnZVZpZXcsCi52aXNpYmxlTWVkaXVtVmlldywKLnZpc2libGVTbWFsbFZpZXcgewogIGRpc3BsYXk6IG5vbmU7Cn0KCkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDkwMHB4KSB7CiAgI3Rvb2xiYXJWaWV3ZXJNaWRkbGUgewogICAgZGlzcGxheTogdGFibGU7CiAgICBtYXJnaW46IGF1dG87CiAgICBsZWZ0OiBhdXRvOwogICAgcG9zaXRpb246IGluaGVyaXQ7CiAgICB0cmFuc2Zvcm06IG5vbmU7CiAgfQp9CgpAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA4NDBweCkgewogICNzaWRlYmFyQ29udGVudCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7CiAgfQoKICBodG1sW2Rpcj0nbHRyJ10gI291dGVyQ29udGFpbmVyLnNpZGViYXJPcGVuICN2aWV3ZXJDb250YWluZXIgewogICAgbGVmdDogMHB4ICFpbXBvcnRhbnQ7CiAgfQogIGh0bWxbZGlyPSdydGwnXSAjb3V0ZXJDb250YWluZXIuc2lkZWJhck9wZW4gI3ZpZXdlckNvbnRhaW5lciB7CiAgICByaWdodDogMHB4ICFpbXBvcnRhbnQ7CiAgfQoKICAjb3V0ZXJDb250YWluZXIgLmhpZGRlbkxhcmdlVmlldywKICAjb3V0ZXJDb250YWluZXIgLmhpZGRlbk1lZGl1bVZpZXcgewogICAgZGlzcGxheTogaW5oZXJpdDsKICB9CiAgI291dGVyQ29udGFpbmVyIC52aXNpYmxlTGFyZ2VWaWV3LAogICNvdXRlckNvbnRhaW5lciAudmlzaWJsZU1lZGl1bVZpZXcgewogICAgZGlzcGxheTogbm9uZTsKICB9Cn0KCkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDc3MHB4KSB7CiAgI291dGVyQ29udGFpbmVyIC5oaWRkZW5MYXJnZVZpZXcgewogICAgZGlzcGxheTogbm9uZTsKICB9CiAgI291dGVyQ29udGFpbmVyIC52aXNpYmxlTGFyZ2VWaWV3IHsKICAgIGRpc3BsYXk6IGluaGVyaXQ7CiAgfQp9CgpAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA3MDBweCkgewogICNvdXRlckNvbnRhaW5lciAuaGlkZGVuTWVkaXVtVmlldyB7CiAgICBkaXNwbGF5OiBub25lOwogIH0KICAjb3V0ZXJDb250YWluZXIgLnZpc2libGVNZWRpdW1WaWV3IHsKICAgIGRpc3BsYXk6IGluaGVyaXQ7CiAgfQp9CgpAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2NDBweCkgewogIC5oaWRkZW5TbWFsbFZpZXcsIC5oaWRkZW5TbWFsbFZpZXcgKiB7CiAgICBkaXNwbGF5OiBub25lOwogIH0KICAudmlzaWJsZVNtYWxsVmlldyB7CiAgICBkaXNwbGF5OiBpbmhlcml0OwogIH0KICAudG9vbGJhckJ1dHRvblNwYWNlciB7CiAgICB3aWR0aDogMDsKICB9CiAgaHRtbFtkaXI9J2x0ciddIC5maW5kYmFyIHsKICAgIGxlZnQ6IDM4cHg7CiAgfQogIGh0bWxbZGlyPSdydGwnXSAuZmluZGJhciB7CiAgICByaWdodDogMzhweDsKICB9Cn0KCkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDUzNXB4KSB7CiAgI3NjYWxlU2VsZWN0Q29udGFpbmVyIHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgfQp9Cg==';
  export function getBundle() {
    return bundle;
  }
  export function getBundleMd5() {
    return '0d910d40ed447fb106d8429b0aa5cd38';
  }
  export function getFileName() {
    return 'viewer.css';
  }
  